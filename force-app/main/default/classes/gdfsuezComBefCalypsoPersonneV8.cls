//Generated by FuseIT WSDL2Apex (http://www.fuseit.com/Solutions/SFDC-Explorer/Help-WSDL-Parser.aspx)
	
public class gdfsuezComBefCalypsoPersonneV8 {
	public static DateTime parseDateTime(String nodeText){
			String iso8601 = nodeText;
			JSONParser parser = JSON.createParser( '{"t":"' + iso8601 + '"}');
			parser.nextToken();
			parser.nextValue();
			DateTime dt = parser.getDateTimeValue();
			//System.debug('dt: ' + dt);
			return dt;
		}
	public class adresseDt {
		public String appartement;
		public String autreVille;
		public String batiment;
		public String boitePostale;
		public String CP;
		public String chez;
		public String codeBoitePostale;
		public String complementAdresse;
		public gdfsuezComBefChpPivotV8.listeValeursDt departement;
		public String INSEE;
		public String libelleVoie;
		public String lieuDit;
		public String nVoie;
		public gdfsuezComBefChpPivotV8.listeValeursDt nonDistribution;
		public gdfsuezComBefChpPivotV8.listeValeursDt pays;
		public String porte;
		public String servicesPostauxBP;
		public String sigleBatiment;
		public String ville;
		public String etage;
		public String typeVoie;
		public String servicesPostauxTSA;
		public String escalier;
		public String digicode;
		public String groupeStructureRegionale;
		private String[] appartement_type_info = new String[]{'appartement','http://gdfsuez.com/bef/calypso/personne','string10','0','1','false'};
		private String[] autreVille_type_info = new String[]{'autreVille','http://gdfsuez.com/bef/calypso/personne','string40','0','1','false'};
		private String[] batiment_type_info = new String[]{'batiment','http://gdfsuez.com/bef/calypso/personne','string20','0','1','false'};
		private String[] boitePostale_type_info = new String[]{'boitePostale','http://gdfsuez.com/bef/calypso/personne','string10','0','1','false'};
		private String[] CP_type_info = new String[]{'CP','http://gdfsuez.com/bef/calypso/personne','string10','0','1','false'};
		private String[] chez_type_info = new String[]{'chez','http://gdfsuez.com/bef/calypso/personne','string40','0','1','false'};
		private String[] codeBoitePostale_type_info = new String[]{'codeBoitePostale','http://gdfsuez.com/bef/calypso/personne','string10','0','1','false'};
		private String[] complementAdresse_type_info = new String[]{'complementAdresse','http://gdfsuez.com/bef/calypso/personne','string40','0','1','false'};
		private String[] departement_type_info = new String[]{'departement','http://gdfsuez.com/bef/calypso/personne','listeValeursDt','0','1','false'};
		private String[] INSEE_type_info = new String[]{'INSEE','http://gdfsuez.com/bef/calypso/personne','string5','0','1','false'};
		private String[] libelleVoie_type_info = new String[]{'libelleVoie','http://gdfsuez.com/bef/calypso/personne','string60','0','1','false'};
		private String[] lieuDit_type_info = new String[]{'lieuDit','http://gdfsuez.com/bef/calypso/personne','string40','0','1','false'};
		private String[] nVoie_type_info = new String[]{'nVoie','http://gdfsuez.com/bef/calypso/personne','string60','0','1','false'};
		private String[] nonDistribution_type_info = new String[]{'nonDistribution','http://gdfsuez.com/bef/calypso/personne','listeValeursDt','0','1','false'};
		private String[] pays_type_info = new String[]{'pays','http://gdfsuez.com/bef/calypso/personne','listeValeursDt','0','1','false'};
		private String[] porte_type_info = new String[]{'porte','http://gdfsuez.com/bef/calypso/personne','string40','0','1','false'};
		private String[] servicesPostauxBP_type_info = new String[]{'servicesPostauxBP','http://gdfsuez.com/bef/calypso/personne','string60','0','1','false'};
		private String[] sigleBatiment_type_info = new String[]{'sigleBatiment','http://gdfsuez.com/bef/calypso/personne','string20','0','1','false'};
		private String[] ville_type_info = new String[]{'ville','http://gdfsuez.com/bef/calypso/personne','string40','0','1','false'};
		private String[] etage_type_info = new String[]{'etage','http://gdfsuez.com/bef/calypso/personne','string10','0','1','false'};
		private String[] typeVoie_type_info = new String[]{'typeVoie','http://gdfsuez.com/bef/calypso/personne','string256','0','1','false'};
		private String[] servicesPostauxTSA_type_info = new String[]{'servicesPostauxTSA','http://gdfsuez.com/bef/calypso/personne','string256','0','1','false'};
		private String[] escalier_type_info = new String[]{'escalier','http://gdfsuez.com/bef/calypso/personne','string40','0','1','false'};
		private String[] digicode_type_info = new String[]{'digicode','http://gdfsuez.com/bef/calypso/personne','string256','0','1','false'};
		private String[] groupeStructureRegionale_type_info = new String[]{'groupeStructureRegionale','http://gdfsuez.com/bef/calypso/personne','string8','0','1','false'};
		private String[] apex_schema_type_info = new String[]{'http://gdfsuez.com/bef/calypso/personne','true','false'};
		private String[] field_order_type_info = new String[]{'appartement','autreVille','batiment','boitePostale','CP','chez','codeBoitePostale','complementAdresse','departement','INSEE','libelleVoie','lieuDit','nVoie','nonDistribution','pays','porte','servicesPostauxBP','sigleBatiment','ville','etage','typeVoie','servicesPostauxTSA','escalier','digicode','groupeStructureRegionale'};
		public adresseDt(){
		}
		public adresseDt(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode appartementNode = responseNode.getChildElement('appartement', 'http://gdfsuez.com/bef/calypso/personne');
			this.appartement = (appartementNode == null) ? null : appartementNode.getText();
			nodesParsed.add(appartementNode);
			//System.debug(this.appartement);           
			DOM.XmlNode autreVilleNode = responseNode.getChildElement('autreVille', 'http://gdfsuez.com/bef/calypso/personne');
			this.autreVille = (autreVilleNode == null) ? null : autreVilleNode.getText();
			nodesParsed.add(autreVilleNode);
			//System.debug(this.autreVille);            
			DOM.XmlNode batimentNode = responseNode.getChildElement('batiment', 'http://gdfsuez.com/bef/calypso/personne');
			this.batiment = (batimentNode == null) ? null : batimentNode.getText();
			nodesParsed.add(batimentNode);
			//System.debug(this.batiment);          
			DOM.XmlNode boitePostaleNode = responseNode.getChildElement('boitePostale', 'http://gdfsuez.com/bef/calypso/personne');
			this.boitePostale = (boitePostaleNode == null) ? null : boitePostaleNode.getText();
			nodesParsed.add(boitePostaleNode);
			//System.debug(this.boitePostale);          
			DOM.XmlNode CPNode = responseNode.getChildElement('CP', 'http://gdfsuez.com/bef/calypso/personne');
			this.CP = (CPNode == null) ? null : CPNode.getText();
			nodesParsed.add(CPNode);
			//System.debug(this.CP);            
			DOM.XmlNode chezNode = responseNode.getChildElement('chez', 'http://gdfsuez.com/bef/calypso/personne');
			this.chez = (chezNode == null) ? null : chezNode.getText();
			nodesParsed.add(chezNode);
			//System.debug(this.chez);          
			DOM.XmlNode codeBoitePostaleNode = responseNode.getChildElement('codeBoitePostale', 'http://gdfsuez.com/bef/calypso/personne');
			this.codeBoitePostale = (codeBoitePostaleNode == null) ? null : codeBoitePostaleNode.getText();
			nodesParsed.add(codeBoitePostaleNode);
			//System.debug(this.codeBoitePostale);          
			DOM.XmlNode complementAdresseNode = responseNode.getChildElement('complementAdresse', 'http://gdfsuez.com/bef/calypso/personne');
			this.complementAdresse = (complementAdresseNode == null) ? null : complementAdresseNode.getText();
			nodesParsed.add(complementAdresseNode);
			//System.debug(this.complementAdresse);         
			DOM.XmlNode departementNode = responseNode.getChildElement('departement', 'http://gdfsuez.com/bef/calypso/personne');
			if(departementNode == null){
				this.departement = null;
			} else{
				gdfsuezComBefChpPivotV8.listeValeursDt departementObj = new gdfsuezComBefChpPivotV8.listeValeursDt(departementNode);
				nodesParsed.add(departementNode);
				this.departement = departementObj;
			}
			//System.debug(this.departement);           
			DOM.XmlNode INSEENode = responseNode.getChildElement('INSEE', 'http://gdfsuez.com/bef/calypso/personne');
			this.INSEE = (INSEENode == null) ? null : INSEENode.getText();
			nodesParsed.add(INSEENode);
			//System.debug(this.INSEE);         
			DOM.XmlNode libelleVoieNode = responseNode.getChildElement('libelleVoie', 'http://gdfsuez.com/bef/calypso/personne');
			this.libelleVoie = (libelleVoieNode == null) ? null : libelleVoieNode.getText();
			nodesParsed.add(libelleVoieNode);
			//System.debug(this.libelleVoie);           
			DOM.XmlNode lieuDitNode = responseNode.getChildElement('lieuDit', 'http://gdfsuez.com/bef/calypso/personne');
			this.lieuDit = (lieuDitNode == null) ? null : lieuDitNode.getText();
			nodesParsed.add(lieuDitNode);
			//System.debug(this.lieuDit);           
			DOM.XmlNode nVoieNode = responseNode.getChildElement('nVoie', 'http://gdfsuez.com/bef/calypso/personne');
			this.nVoie = (nVoieNode == null) ? null : nVoieNode.getText();
			nodesParsed.add(nVoieNode);
			//System.debug(this.nVoie);         
			DOM.XmlNode nonDistributionNode = responseNode.getChildElement('nonDistribution', 'http://gdfsuez.com/bef/calypso/personne');
			if(nonDistributionNode == null){
				this.nonDistribution = null;
			} else{
				gdfsuezComBefChpPivotV8.listeValeursDt nonDistributionObj = new gdfsuezComBefChpPivotV8.listeValeursDt(nonDistributionNode);
				nodesParsed.add(nonDistributionNode);
				this.nonDistribution = nonDistributionObj;
			}
			//System.debug(this.nonDistribution);           
			DOM.XmlNode paysNode = responseNode.getChildElement('pays', 'http://gdfsuez.com/bef/calypso/personne');
			if(paysNode == null){
				this.pays = null;
			} else{
				gdfsuezComBefChpPivotV8.listeValeursDt paysObj = new gdfsuezComBefChpPivotV8.listeValeursDt(paysNode);
				nodesParsed.add(paysNode);
				this.pays = paysObj;
			}
			//System.debug(this.pays);          
			DOM.XmlNode porteNode = responseNode.getChildElement('porte', 'http://gdfsuez.com/bef/calypso/personne');
			this.porte = (porteNode == null) ? null : porteNode.getText();
			nodesParsed.add(porteNode);
			//System.debug(this.porte);         
			DOM.XmlNode servicesPostauxBPNode = responseNode.getChildElement('servicesPostauxBP', 'http://gdfsuez.com/bef/calypso/personne');
			this.servicesPostauxBP = (servicesPostauxBPNode == null) ? null : servicesPostauxBPNode.getText();
			nodesParsed.add(servicesPostauxBPNode);
			//System.debug(this.servicesPostauxBP);         
			DOM.XmlNode sigleBatimentNode = responseNode.getChildElement('sigleBatiment', 'http://gdfsuez.com/bef/calypso/personne');
			this.sigleBatiment = (sigleBatimentNode == null) ? null : sigleBatimentNode.getText();
			nodesParsed.add(sigleBatimentNode);
			//System.debug(this.sigleBatiment);         
			DOM.XmlNode villeNode = responseNode.getChildElement('ville', 'http://gdfsuez.com/bef/calypso/personne');
			this.ville = (villeNode == null) ? null : villeNode.getText();
			nodesParsed.add(villeNode);
			//System.debug(this.ville);         
			DOM.XmlNode etageNode = responseNode.getChildElement('etage', 'http://gdfsuez.com/bef/calypso/personne');
			this.etage = (etageNode == null) ? null : etageNode.getText();
			nodesParsed.add(etageNode);
			//System.debug(this.etage);         
			DOM.XmlNode typeVoieNode = responseNode.getChildElement('typeVoie', 'http://gdfsuez.com/bef/calypso/personne');
			this.typeVoie = (typeVoieNode == null) ? null : typeVoieNode.getText();
			nodesParsed.add(typeVoieNode);
			//System.debug(this.typeVoie);          
			DOM.XmlNode servicesPostauxTSANode = responseNode.getChildElement('servicesPostauxTSA', 'http://gdfsuez.com/bef/calypso/personne');
			this.servicesPostauxTSA = (servicesPostauxTSANode == null) ? null : servicesPostauxTSANode.getText();
			nodesParsed.add(servicesPostauxTSANode);
			//System.debug(this.servicesPostauxTSA);            
			DOM.XmlNode escalierNode = responseNode.getChildElement('escalier', 'http://gdfsuez.com/bef/calypso/personne');
			this.escalier = (escalierNode == null) ? null : escalierNode.getText();
			nodesParsed.add(escalierNode);
			//System.debug(this.escalier);          
			DOM.XmlNode digicodeNode = responseNode.getChildElement('digicode', 'http://gdfsuez.com/bef/calypso/personne');
			this.digicode = (digicodeNode == null) ? null : digicodeNode.getText();
			nodesParsed.add(digicodeNode);
			//System.debug(this.digicode);          
			DOM.XmlNode groupeStructureRegionaleNode = responseNode.getChildElement('groupeStructureRegionale', 'http://gdfsuez.com/bef/calypso/personne');
			this.groupeStructureRegionale = (groupeStructureRegionaleNode == null) ? null : groupeStructureRegionaleNode.getText();
			nodesParsed.add(groupeStructureRegionaleNode);
			//System.debug(this.groupeStructureRegionale);          
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			/*Dom.XmlNode appartementNode = outerNode.addChildElement('appartement', 'http://gdfsuez.com/bef/calypso/personne', '');
			appartementNode.addTextNode((this.appartement == null) ? '' : this.appartement);
			Dom.XmlNode autreVilleNode = outerNode.addChildElement('autreVille', 'http://gdfsuez.com/bef/calypso/personne', '');
			autreVilleNode.addTextNode((this.autreVille == null) ? '' : this.autreVille);
			Dom.XmlNode batimentNode = outerNode.addChildElement('batiment', 'http://gdfsuez.com/bef/calypso/personne', '');
			batimentNode.addTextNode((this.batiment == null) ? '' : this.batiment);
			Dom.XmlNode boitePostaleNode = outerNode.addChildElement('boitePostale', 'http://gdfsuez.com/bef/calypso/personne', '');
			boitePostaleNode.addTextNode((this.boitePostale == null) ? '' : this.boitePostale);*/
			if(this.CP != null){
				Dom.XmlNode CPNode = outerNode.addChildElement('CP', null, null);
				CPNode.addTextNode((this.CP == null) ? '' : this.CP);
			}

			if(this.chez != null){
				Dom.XmlNode chezNode = outerNode.addChildElement('chez', null, null);
				chezNode.addTextNode((this.chez == null) ? '' : this.chez);
			}
			/*Dom.XmlNode codeBoitePostaleNode = outerNode.addChildElement('codeBoitePostale', 'http://gdfsuez.com/bef/calypso/personne', '');
			codeBoitePostaleNode.addTextNode((this.codeBoitePostale == null) ? '' : this.codeBoitePostale);*/
			if(this.complementAdresse != null){
				Dom.XmlNode complementAdresseNode = outerNode.addChildElement('complementAdresse', null, null);
				complementAdresseNode.addTextNode((this.complementAdresse == null) ? '' : this.complementAdresse);
			}
			
			/*
			gdfsuezComBefChpPivotV8.listeValeursDt departementObj = this.departement;
			Dom.XmlNode departementNode = outerNode.addChildElement('departement', 'http://gdfsuez.com/bef/calypso/personne', '');
			if(departementObj != null){
				departementObj.populateXmlNode(departementNode);
			}
			Dom.XmlNode INSEENode = outerNode.addChildElement('INSEE', 'http://gdfsuez.com/bef/calypso/personne', '');
			INSEENode.addTextNode((this.INSEE == null) ? '' : this.INSEE);*/

			if(this.libelleVoie != null){
				Dom.XmlNode libelleVoieNode = outerNode.addChildElement('libelleVoie', null, null);
				libelleVoieNode.addTextNode((this.libelleVoie == null) ? '' : this.libelleVoie);
			}

			/*Dom.XmlNode lieuDitNode = outerNode.addChildElement('lieuDit', 'http://gdfsuez.com/bef/calypso/personne', '');
			lieuDitNode.addTextNode((this.lieuDit == null) ? '' : this.lieuDit);*/
            if(this.nVoie != null){
                Dom.XmlNode nVoieNode = outerNode.addChildElement('nVoie', null, null);
                nVoieNode.addTextNode((String.isBlank(this.nVoie)) ? '' : this.nVoie);
            }
			/*gdfsuezComBefChpPivotV8.listeValeursDt nonDistributionObj = this.nonDistribution;
			Dom.XmlNode nonDistributionNode = outerNode.addChildElement('nonDistribution', 'http://gdfsuez.com/bef/calypso/personne', '');
			if(nonDistributionObj != null){
				nonDistributionObj.populateXmlNode(nonDistributionNode);
			}*/
			
			if(pays != null){
				gdfsuezComBefChpPivotV8.listeValeursDt paysObj = this.pays;
				Dom.XmlNode paysNode = outerNode.addChildElement('pays', null, null);
				if(paysObj != null){
					paysObj.populateXmlNode(paysNode);
				}
			}

			/*Dom.XmlNode porteNode = outerNode.addChildElement('porte', 'http://gdfsuez.com/bef/calypso/personne', '');
			porteNode.addTextNode((this.porte == null) ? '' : this.porte);
			Dom.XmlNode servicesPostauxBPNode = outerNode.addChildElement('servicesPostauxBP', 'http://gdfsuez.com/bef/calypso/personne', '');
			servicesPostauxBPNode.addTextNode((this.servicesPostauxBP == null) ? '' : this.servicesPostauxBP);
			Dom.XmlNode sigleBatimentNode = outerNode.addChildElement('sigleBatiment', 'http://gdfsuez.com/bef/calypso/personne', '');
			sigleBatimentNode.addTextNode((this.sigleBatiment == null) ? '' : this.sigleBatiment);*/
			if(this.ville != null){
				Dom.XmlNode villeNode = outerNode.addChildElement('ville', null, null);
				villeNode.addTextNode((this.ville == null) ? '' : this.ville);
			}

			/*Dom.XmlNode etageNode = outerNode.addChildElement('etage', 'http://gdfsuez.com/bef/calypso/personne', '');
			etageNode.addTextNode((this.etage == null) ? '' : this.etage);
			Dom.XmlNode typeVoieNode = outerNode.addChildElement('typeVoie', 'http://gdfsuez.com/bef/calypso/personne', '');
			typeVoieNode.addTextNode((this.typeVoie == null) ? '' : this.typeVoie);
			Dom.XmlNode servicesPostauxTSANode = outerNode.addChildElement('servicesPostauxTSA', 'http://gdfsuez.com/bef/calypso/personne', '');
			servicesPostauxTSANode.addTextNode((this.servicesPostauxTSA == null) ? '' : this.servicesPostauxTSA);
			Dom.XmlNode escalierNode = outerNode.addChildElement('escalier', 'http://gdfsuez.com/bef/calypso/personne', '');
			escalierNode.addTextNode((this.escalier == null) ? '' : this.escalier);
			Dom.XmlNode digicodeNode = outerNode.addChildElement('digicode', 'http://gdfsuez.com/bef/calypso/personne', '');
			digicodeNode.addTextNode((this.digicode == null) ? '' : this.digicode);
			Dom.XmlNode groupeStructureRegionaleNode = outerNode.addChildElement('groupeStructureRegionale', 'http://gdfsuez.com/bef/calypso/personne', '');
			groupeStructureRegionaleNode.addTextNode((this.groupeStructureRegionale == null) ? '' : this.groupeStructureRegionale);*/
		}
	}
	public class CompteClientAbstract {
		public String idCompteClient;
		private String[] idCompteClient_type_info = new String[]{'idCompteClient','http://gdfsuez.com/bef/calypso/personne','','0','1','false'};
		private String[] apex_schema_type_info = new String[]{'http://gdfsuez.com/bef/calypso/personne','true','false'};
		private String[] field_order_type_info = new String[]{'idCompteClient'};
		public CompteClientAbstract(){
		}
		public CompteClientAbstract(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode idCompteClientNode = responseNode.getChildElement('idCompteClient', 'http://gdfsuez.com/bef/calypso/personne');
			this.idCompteClient = (idCompteClientNode == null) ? null : idCompteClientNode.getText();
			nodesParsed.add(idCompteClientNode);
			//System.debug(this.idCompteClient);            
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode idCompteClientNode = outerNode.addChildElement('idCompteClient', 'http://gdfsuez.com/bef/calypso/personne', '');
			idCompteClientNode.addTextNode((this.idCompteClient == null) ? '' : this.idCompteClient);
		}
	}
	public class historiqueDt {
		public gdfsuezComBefChpPivotV8.listeValeursDt action;
		public DateTime dateTrace;
		public gdfsuezComBefChpPivotV8.listeValeursDt canal;
		public gdfsuezComBefChpPivotV8.listeValeursDt direction;
		public gdfsuezComBefCalypsoPersonneV8.historiqueDt_refPersonne_element refPersonne;
		private String[] action_type_info = new String[]{'action','http://gdfsuez.com/bef/calypso/personne','listeValeursDt','0','1','false'};
		private String[] dateTrace_type_info = new String[]{'dateTrace','http://gdfsuez.com/bef/calypso/personne','dateTime','0','1','false'};
		private String[] canal_type_info = new String[]{'canal','http://gdfsuez.com/bef/calypso/personne','listeValeursDt','0','1','false'};
		private String[] direction_type_info = new String[]{'direction','http://gdfsuez.com/bef/calypso/personne','listeValeursDt','0','1','false'};
		private String[] refPersonne_type_info = new String[]{'refPersonne','http://gdfsuez.com/bef/calypso/personne','','0','1','false'};
		private String[] apex_schema_type_info = new String[]{'http://gdfsuez.com/bef/calypso/personne','true','false'};
		private String[] field_order_type_info = new String[]{'action','dateTrace','canal','direction','refPersonne'};
		public historiqueDt(){
		}
		public historiqueDt(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode actionNode = responseNode.getChildElement('action', 'http://gdfsuez.com/bef/calypso/personne');
			if(actionNode == null){
				this.action = null;
			} else{
				gdfsuezComBefChpPivotV8.listeValeursDt actionObj = new gdfsuezComBefChpPivotV8.listeValeursDt(actionNode);
				nodesParsed.add(actionNode);
				this.action = actionObj;
			}
			//System.debug(this.action);            
			DOM.XmlNode dateTraceNode = responseNode.getChildElement('dateTrace', 'http://gdfsuez.com/bef/calypso/personne');
			this.dateTrace = (dateTraceNode == null) ? null :  gdfsuezComBefCalypsoPersonneV8.parseDateTime(dateTraceNode.getText());
			nodesParsed.add(dateTraceNode);
			//System.debug(this.dateTrace);         
			DOM.XmlNode canalNode = responseNode.getChildElement('canal', 'http://gdfsuez.com/bef/calypso/personne');
			if(canalNode == null){
				this.canal = null;
			} else{
				gdfsuezComBefChpPivotV8.listeValeursDt canalObj = new gdfsuezComBefChpPivotV8.listeValeursDt(canalNode);
				nodesParsed.add(canalNode);
				this.canal = canalObj;
			}
			//System.debug(this.canal);         
			DOM.XmlNode directionNode = responseNode.getChildElement('direction', 'http://gdfsuez.com/bef/calypso/personne');
			if(directionNode == null){
				this.direction = null;
			} else{
				gdfsuezComBefChpPivotV8.listeValeursDt directionObj = new gdfsuezComBefChpPivotV8.listeValeursDt(directionNode);
				nodesParsed.add(directionNode);
				this.direction = directionObj;
			}
			//System.debug(this.direction);         
			DOM.XmlNode refPersonneNode = responseNode.getChildElement('refPersonne', 'http://gdfsuez.com/bef/calypso/personne');
			if(refPersonneNode == null){
				this.refPersonne = null;
			} else{
				gdfsuezComBefCalypsoPersonneV8.historiqueDt_refPersonne_element refPersonneObj = new gdfsuezComBefCalypsoPersonneV8.historiqueDt_refPersonne_element(refPersonneNode);
				nodesParsed.add(refPersonneNode);
				this.refPersonne = refPersonneObj;
			}
			//System.debug(this.refPersonne);           
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			gdfsuezComBefChpPivotV8.listeValeursDt actionObj = this.action;
			Dom.XmlNode actionNode = outerNode.addChildElement('action', 'http://gdfsuez.com/bef/calypso/personne', '');
			if(actionObj != null){
				actionObj.populateXmlNode(actionNode);
			}
			Dom.XmlNode dateTraceNode = outerNode.addChildElement('dateTrace', 'http://gdfsuez.com/bef/calypso/personne', '');
			dateTraceNode.addTextNode((this.dateTrace == null) ? '' : String.valueOf(this.dateTrace));
			
			gdfsuezComBefChpPivotV8.listeValeursDt canalObj = this.canal;
			Dom.XmlNode canalNode = outerNode.addChildElement('canal', 'http://gdfsuez.com/bef/calypso/personne', '');
			if(canalObj != null){
				canalObj.populateXmlNode(canalNode);
			}
			
			gdfsuezComBefChpPivotV8.listeValeursDt directionObj = this.direction;
			Dom.XmlNode directionNode = outerNode.addChildElement('direction', 'http://gdfsuez.com/bef/calypso/personne', '');
			if(directionObj != null){
				directionObj.populateXmlNode(directionNode);
			}
			
			gdfsuezComBefCalypsoPersonneV8.historiqueDt_refPersonne_element refPersonneObj = this.refPersonne;
			Dom.XmlNode refPersonneNode = outerNode.addChildElement('refPersonne', 'http://gdfsuez.com/bef/calypso/personne', '');
			if(refPersonneObj != null){
				refPersonneObj.populateXmlNode(refPersonneNode);
			}
		}
	}
	public class historiqueDt_refPersonne_element {
		public gdfsuezComBefCalypsoPersonneV8.PersonneAbstract payeurDivergent;
		public gdfsuezComBefCalypsoPersonneV8.PersonneAbstract contractant;
		public gdfsuezComBefCalypsoPersonneV8.PersonneAbstract destinataireRelance;
		public gdfsuezComBefCalypsoPersonneV8.PersonneAbstract destinataireFacture;
		public gdfsuezComBefCalypsoPersonneV8.PersonneAbstract idPersonne;
		public gdfsuezComBefChpPivotV8.listeValeursDt rolePersonne;
		private String[] payeurDivergent_type_info = new String[]{'payeurDivergent','http://gdfsuez.com/bef/calypso/personne','PersonneAbstract','0','1','false'};
		private String[] contractant_type_info = new String[]{'contractant','http://gdfsuez.com/bef/calypso/personne','PersonneAbstract','0','1','false'};
		private String[] destinataireRelance_type_info = new String[]{'destinataireRelance','http://gdfsuez.com/bef/calypso/personne','PersonneAbstract','0','1','false'};
		private String[] destinataireFacture_type_info = new String[]{'destinataireFacture','http://gdfsuez.com/bef/calypso/personne','PersonneAbstract','0','1','false'};
		private String[] idPersonne_type_info = new String[]{'idPersonne','http://gdfsuez.com/bef/calypso/personne','PersonneAbstract','0','1','false'};
		private String[] rolePersonne_type_info = new String[]{'rolePersonne','http://gdfsuez.com/bef/calypso/personne','listeValeursDt','0','1','false'};
		private String[] apex_schema_type_info = new String[]{'http://gdfsuez.com/bef/calypso/personne','true','false'};
		private String[] field_order_type_info = new String[]{'payeurDivergent','contractant','destinataireRelance','destinataireFacture','idPersonne','rolePersonne'};
		public historiqueDt_refPersonne_element(){
		}
		public historiqueDt_refPersonne_element(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode payeurDivergentNode = responseNode.getChildElement('payeurDivergent', 'http://gdfsuez.com/bef/calypso/personne');
			if(payeurDivergentNode == null){
				this.payeurDivergent = null;
			} else{
				gdfsuezComBefCalypsoPersonneV8.PersonneAbstract payeurDivergentObj = new gdfsuezComBefCalypsoPersonneV8.PersonneAbstract(payeurDivergentNode);
				nodesParsed.add(payeurDivergentNode);
				this.payeurDivergent = payeurDivergentObj;
			}
			//System.debug(this.payeurDivergent);           
			DOM.XmlNode contractantNode = responseNode.getChildElement('contractant', 'http://gdfsuez.com/bef/calypso/personne');
			if(contractantNode == null){
				this.contractant = null;
			} else{
				gdfsuezComBefCalypsoPersonneV8.PersonneAbstract contractantObj = new gdfsuezComBefCalypsoPersonneV8.PersonneAbstract(contractantNode);
				nodesParsed.add(contractantNode);
				this.contractant = contractantObj;
			}
			//System.debug(this.contractant);           
			DOM.XmlNode destinataireRelanceNode = responseNode.getChildElement('destinataireRelance', 'http://gdfsuez.com/bef/calypso/personne');
			if(destinataireRelanceNode == null){
				this.destinataireRelance = null;
			} else{
				gdfsuezComBefCalypsoPersonneV8.PersonneAbstract destinataireRelanceObj = new gdfsuezComBefCalypsoPersonneV8.PersonneAbstract(destinataireRelanceNode);
				nodesParsed.add(destinataireRelanceNode);
				this.destinataireRelance = destinataireRelanceObj;
			}
			//System.debug(this.destinataireRelance);           
			DOM.XmlNode destinataireFactureNode = responseNode.getChildElement('destinataireFacture', 'http://gdfsuez.com/bef/calypso/personne');
			if(destinataireFactureNode == null){
				this.destinataireFacture = null;
			} else{
				gdfsuezComBefCalypsoPersonneV8.PersonneAbstract destinataireFactureObj = new gdfsuezComBefCalypsoPersonneV8.PersonneAbstract(destinataireFactureNode);
				nodesParsed.add(destinataireFactureNode);
				this.destinataireFacture = destinataireFactureObj;
			}
			//System.debug(this.destinataireFacture);           
			DOM.XmlNode idPersonneNode = responseNode.getChildElement('idPersonne', 'http://gdfsuez.com/bef/calypso/personne');
			if(idPersonneNode == null){
				this.idPersonne = null;
			} else{
				gdfsuezComBefCalypsoPersonneV8.PersonneAbstract idPersonneObj = new gdfsuezComBefCalypsoPersonneV8.PersonneAbstract(idPersonneNode);
				nodesParsed.add(idPersonneNode);
				this.idPersonne = idPersonneObj;
			}
			//System.debug(this.idPersonne);            
			DOM.XmlNode rolePersonneNode = responseNode.getChildElement('rolePersonne', 'http://gdfsuez.com/bef/calypso/personne');
			if(rolePersonneNode == null){
				this.rolePersonne = null;
			} else{
				gdfsuezComBefChpPivotV8.listeValeursDt rolePersonneObj = new gdfsuezComBefChpPivotV8.listeValeursDt(rolePersonneNode);
				nodesParsed.add(rolePersonneNode);
				this.rolePersonne = rolePersonneObj;
			}
			//System.debug(this.rolePersonne);          
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			gdfsuezComBefCalypsoPersonneV8.PersonneAbstract payeurDivergentObj = this.payeurDivergent;
			Dom.XmlNode payeurDivergentNode = outerNode.addChildElement('payeurDivergent', 'http://gdfsuez.com/bef/calypso/personne', '');
			if(payeurDivergentObj != null){
				payeurDivergentObj.populateXmlNode(payeurDivergentNode);
			}
			
			gdfsuezComBefCalypsoPersonneV8.PersonneAbstract contractantObj = this.contractant;
			Dom.XmlNode contractantNode = outerNode.addChildElement('contractant', 'http://gdfsuez.com/bef/calypso/personne', '');
			if(contractantObj != null){
				contractantObj.populateXmlNode(contractantNode);
			}
			
			gdfsuezComBefCalypsoPersonneV8.PersonneAbstract destinataireRelanceObj = this.destinataireRelance;
			Dom.XmlNode destinataireRelanceNode = outerNode.addChildElement('destinataireRelance', 'http://gdfsuez.com/bef/calypso/personne', '');
			if(destinataireRelanceObj != null){
				destinataireRelanceObj.populateXmlNode(destinataireRelanceNode);
			}
			
			gdfsuezComBefCalypsoPersonneV8.PersonneAbstract destinataireFactureObj = this.destinataireFacture;
			Dom.XmlNode destinataireFactureNode = outerNode.addChildElement('destinataireFacture', 'http://gdfsuez.com/bef/calypso/personne', '');
			if(destinataireFactureObj != null){
				destinataireFactureObj.populateXmlNode(destinataireFactureNode);
			}
			
			gdfsuezComBefCalypsoPersonneV8.PersonneAbstract idPersonneObj = this.idPersonne;
			Dom.XmlNode idPersonneNode = outerNode.addChildElement('idPersonne', 'http://gdfsuez.com/bef/calypso/personne', '');
			if(idPersonneObj != null){
				idPersonneObj.populateXmlNode(idPersonneNode);
			}
			
			gdfsuezComBefChpPivotV8.listeValeursDt rolePersonneObj = this.rolePersonne;
			Dom.XmlNode rolePersonneNode = outerNode.addChildElement('rolePersonne', 'http://gdfsuez.com/bef/calypso/personne', '');
			if(rolePersonneObj != null){
				rolePersonneObj.populateXmlNode(rolePersonneNode);
			}
		}
	}
	public class Personne {
		public String idPersonne;
		private String[] idPersonne_type_info = new String[]{'idPersonne','http://gdfsuez.com/bef/calypso/personne','','0','1','false'};
		public String anneeDeNaissance;
		public gdfsuezComBefChpPivotV8.listeValeursDt civilite;
		public String nom;
		public String prenom;
		public Boolean personneMoraleOuPhysique;
		public String raisonSociale;
		public gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_element correspondance;
		public gdfsuezComBefCalypsoPersonneV8.Personne_profilMarketing_element[] profilMarketing;
		public gdfsuezComBefCalypsoPersonneV8.adresseDt adresse;
		public gdfsuezComBefCalypsoPersonneV8.CompteClientAbstract[] compteClient;
		public gdfsuezComBefCalypsoPersonneV8.typologieMarcheDt[] typologieMarche;
		private String[] anneeDeNaissance_type_info = new String[]{'anneeDeNaissance','http://gdfsuez.com/bef/calypso/personne','string4','0','1','false'};
		private String[] civilite_type_info = new String[]{'civilite','http://gdfsuez.com/bef/calypso/personne','listeValeursDt','0','1','false'};
		private String[] nom_type_info = new String[]{'nom','http://gdfsuez.com/bef/calypso/personne','string40','0','1','false'};
		private String[] prenom_type_info = new String[]{'prenom','http://gdfsuez.com/bef/calypso/personne','string40','0','1','false'};
		private String[] personneMoraleOuPhysique_type_info = new String[]{'personneMoraleOuPhysique','http://gdfsuez.com/bef/calypso/personne','boolean','0','1','false'};
		private String[] raisonSociale_type_info = new String[]{'raisonSociale','http://gdfsuez.com/bef/calypso/personne','string256','0','1','false'};
		private String[] correspondance_type_info = new String[]{'correspondance','http://gdfsuez.com/bef/calypso/personne','','0','1','false'};
		private String[] profilMarketing_type_info = new String[]{'profilMarketing','http://gdfsuez.com/bef/calypso/personne','','0','-1','false'};
		private String[] adresse_type_info = new String[]{'adresse','http://gdfsuez.com/bef/calypso/personne','adresseDt','0','1','false'};
		private String[] compteClient_type_info = new String[]{'compteClient','http://gdfsuez.com/bef/calypso/personne','CompteClientAbstract','0','-1','false'};
		private String[] typologieMarche_type_info = new String[]{'typologieMarche','http://gdfsuez.com/bef/calypso/personne','typologieMarcheDt','0','-1','false'};
		private String[] apex_schema_type_info = new String[]{'http://gdfsuez.com/bef/calypso/personne','true','false'};
		private String[] field_order_type_info = new String[]{'idPersonne','anneeDeNaissance','civilite','nom','prenom','personneMoraleOuPhysique','raisonSociale','correspondance','profilMarketing','adresse','compteClient','typologieMarche'};
		public Personne(){
		}
		public Personne(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode idPersonneNode = responseNode.getChildElement('idPersonne', null);
			this.idPersonne = (idPersonneNode == null) ? null : idPersonneNode.getText();
			nodesParsed.add(idPersonneNode);
			//System.debug(this.idPersonne);            
			DOM.XmlNode anneeDeNaissanceNode = responseNode.getChildElement('anneeDeNaissance', 'http://gdfsuez.com/bef/calypso/personne');
			this.anneeDeNaissance = (anneeDeNaissanceNode == null) ? null : anneeDeNaissanceNode.getText();
			nodesParsed.add(anneeDeNaissanceNode);
			//System.debug(this.anneeDeNaissance);          
			DOM.XmlNode civiliteNode = responseNode.getChildElement('civilite', null);
			if(civiliteNode == null){
				this.civilite = null;
			} else{
				gdfsuezComBefChpPivotV8.listeValeursDt civiliteObj = new gdfsuezComBefChpPivotV8.listeValeursDt(civiliteNode);
				nodesParsed.add(civiliteNode);
				this.civilite = civiliteObj;
			}
			//System.debug(this.civilite);          
			DOM.XmlNode nomNode = responseNode.getChildElement('nom', null);
			this.nom = (nomNode == null) ? null : nomNode.getText();
			nodesParsed.add(nomNode);
			//System.debug(this.nom);           
			DOM.XmlNode prenomNode = responseNode.getChildElement('prenom', null);
			this.prenom = (prenomNode == null) ? null : prenomNode.getText();
			nodesParsed.add(prenomNode);
			//System.debug(this.prenom);            
			DOM.XmlNode personneMoraleOuPhysiqueNode = responseNode.getChildElement('personneMoraleOuPhysique', 'http://gdfsuez.com/bef/calypso/personne');
			this.personneMoraleOuPhysique = (personneMoraleOuPhysiqueNode == null) ? null : Boolean.valueOf(personneMoraleOuPhysiqueNode.getText());
			nodesParsed.add(personneMoraleOuPhysiqueNode);
			//System.debug(this.personneMoraleOuPhysique);          
			DOM.XmlNode raisonSocialeNode = responseNode.getChildElement('raisonSociale', '');
			this.raisonSociale = (raisonSocialeNode == null) ? null : raisonSocialeNode.getText();
			nodesParsed.add(raisonSocialeNode);
			//System.debug(this.raisonSociale);         
			DOM.XmlNode correspondanceNode = responseNode.getChildElement('correspondance', null);
			if(correspondanceNode == null){
				this.correspondance = null;
			} else{
				gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_element correspondanceObj = new gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_element(correspondanceNode);
				nodesParsed.add(correspondanceNode);
				this.correspondance = correspondanceObj;
			}
			//System.debug(this.correspondance);            
			Dom.XmlNode[] profilMarketingChildren = responseNode.getChildElements();
			gdfsuezComBefCalypsoPersonneV8.Personne_profilMarketing_element[] profilMarketingList = new List<gdfsuezComBefCalypsoPersonneV8.Personne_profilMarketing_element>();
			if(profilMarketingChildren == null || profilMarketingChildren.size() == 0){
				this.profilMarketing = null;
			} else{
				for(DOM.XmlNode childNode : profilMarketingChildren){
					if(childNode.GetName() == 'profilMarketing'){
						gdfsuezComBefCalypsoPersonneV8.Personne_profilMarketing_element Obj = new gdfsuezComBefCalypsoPersonneV8.Personne_profilMarketing_element(childNode);
						profilMarketingList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.profilMarketing = profilMarketingList;
			}
			//System.debug(this.profilMarketing);           
			DOM.XmlNode adresseNode = responseNode.getChildElement('adresse', null);
			if(adresseNode == null){
				this.adresse = null;
			} else{
				gdfsuezComBefCalypsoPersonneV8.adresseDt adresseObj = new gdfsuezComBefCalypsoPersonneV8.adresseDt(adresseNode);
				nodesParsed.add(adresseNode);
				this.adresse = adresseObj;
			}
			//System.debug(this.adresse);           
			Dom.XmlNode[] compteClientChildren = responseNode.getChildElements();
			gdfsuezComBefCalypsoPersonneV8.CompteClientAbstract[] compteClientList = new List<gdfsuezComBefCalypsoPersonneV8.CompteClientAbstract>();
			if(compteClientChildren == null || compteClientChildren.size() == 0){
				this.compteClient = null;
			} else{
				for(DOM.XmlNode childNode : compteClientChildren){
					if(childNode.GetName() == 'compteClient'){
						gdfsuezComBefCalypsoPersonneV8.CompteClientAbstract Obj = new gdfsuezComBefCalypsoPersonneV8.CompteClientAbstract(childNode);
						compteClientList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.compteClient = compteClientList;
			}
			//System.debug(this.compteClient);          
			Dom.XmlNode[] typologieMarcheChildren = responseNode.getChildElements();
			gdfsuezComBefCalypsoPersonneV8.typologieMarcheDt[] typologieMarcheList = new List<gdfsuezComBefCalypsoPersonneV8.typologieMarcheDt>();
			if(typologieMarcheChildren == null || typologieMarcheChildren.size() == 0){
				this.typologieMarche = null;
			} else{
				for(DOM.XmlNode childNode : typologieMarcheChildren){
					if(childNode.GetName() == 'typologieMarche'){
						gdfsuezComBefCalypsoPersonneV8.typologieMarcheDt Obj = new gdfsuezComBefCalypsoPersonneV8.typologieMarcheDt(childNode);
						typologieMarcheList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.typologieMarche = typologieMarcheList;
			}
			//System.debug(this.typologieMarche);           
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			if(!String.isBlank(idPersonne)){
				Dom.XmlNode idPersonneNode = outerNode.addChildElement('idPersonne', null, null);
				idPersonneNode.addTextNode((this.idPersonne == null) ? '' : this.idPersonne);
			}

			/*Dom.XmlNode anneeDeNaissanceNode = outerNode.addChildElement('anneeDeNaissance', null, null);
			anneeDeNaissanceNode.addTextNode((this.anneeDeNaissance == null) ? '' : this.anneeDeNaissance);*/
			
			if(civilite != null){
				gdfsuezComBefChpPivotV8.listeValeursDt civiliteObj = this.civilite;
				Dom.XmlNode civiliteNode = outerNode.addChildElement('civilite', null,null);
				if(civiliteObj != null){
					civiliteObj.populateXmlNode(civiliteNode);
				}
			}
			
			if(!String.isBlank(nom)){
				Dom.XmlNode nomNode = outerNode.addChildElement('nom', null, null);
				nomNode.addTextNode((this.nom == null) ? '' : this.nom);
			}

			if(!String.isBlank(prenom)){
				Dom.XmlNode prenomNode = outerNode.addChildElement('prenom', null,null);
				prenomNode.addTextNode((this.prenom == null) ? '' : this.prenom);
			}

			/*Dom.XmlNode personneMoraleOuPhysiqueNode = outerNode.addChildElement('personneMoraleOuPhysique', null, null);
			personneMoraleOuPhysiqueNode.addTextNode((this.personneMoraleOuPhysique == null) ? '' : String.valueOf(this.personneMoraleOuPhysique));*/

			/*Dom.XmlNode raisonSocialeNode = outerNode.addChildElement('raisonSociale', null, null);
			raisonSocialeNode.addTextNode((this.raisonSociale == null) ? '' : this.raisonSociale);*/
			
			gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_element correspondanceObj = this.correspondance;
			Dom.XmlNode correspondanceNode = outerNode.addChildElement('correspondance', null, null);
			if(correspondanceObj != null){
				correspondanceObj.populateXmlNode(correspondanceNode);
			}
			
			gdfsuezComBefCalypsoPersonneV8.Personne_profilMarketing_element[] profilMarketingObj = this.profilMarketing;
			if(profilMarketingObj != null){
				for(gdfsuezComBefCalypsoPersonneV8.Personne_profilMarketing_element element: profilMarketingObj){
					Dom.XmlNode profilMarketingNode = outerNode.addChildElement('profilMarketing', null, null);
					element.populateXmlNode(profilMarketingNode);
				}
			}           
			
			gdfsuezComBefCalypsoPersonneV8.adresseDt adresseObj = this.adresse;
			if(adresseObj != null){
				Dom.XmlNode adresseNode = outerNode.addChildElement('adresse', null, null);
				adresseObj.populateXmlNode(adresseNode);
			}
			
			/*gdfsuezComBefCalypsoPersonneV8.CompteClientAbstract[] compteClientObj = this.compteClient;
			if(compteClientObj != null){
				for(gdfsuezComBefCalypsoPersonneV8.CompteClientAbstract element: compteClientObj){
					Dom.XmlNode compteClientNode = outerNode.addChildElement('compteClient', null, null);
					element.populateXmlNode(compteClientNode);
				}
			}*/         
			
			/*gdfsuezComBefCalypsoPersonneV8.typologieMarcheDt[] typologieMarcheObj = this.typologieMarche;
			if(typologieMarcheObj != null){
				for(gdfsuezComBefCalypsoPersonneV8.typologieMarcheDt element: typologieMarcheObj){
					Dom.XmlNode typologieMarcheNode = outerNode.addChildElement('typologieMarche', null, null);
					element.populateXmlNode(typologieMarcheNode);
				}
			}*/         
		}
	}
	public class Personne_correspondance_canalCommunication_contactabilite_element {
		public gdfsuezComBefChpPivotV8.horodatageSimpleDt horodatage;
		public gdfsuezComBefChpPivotV8.listeValeursDt type_x;
		public gdfsuezComBefChpPivotV8.listeValeursDt modeCollecte;
		private String[] horodatage_type_info = new String[]{'horodatage','http://gdfsuez.com/bef/calypso/personne','horodatageSimpleDt','0','1','false'};
		private String[] type_x_type_info = new String[]{'type','http://gdfsuez.com/bef/calypso/personne','listeValeursDt','0','1','false'};
		private String[] modeCollecte_type_info = new String[]{'modeCollecte','http://gdfsuez.com/bef/calypso/personne','listeValeursDt','0','1','false'};
		private String[] apex_schema_type_info = new String[]{'http://gdfsuez.com/bef/calypso/personne','true','false'};
		private String[] field_order_type_info = new String[]{'horodatage','type_x','modeCollecte'};
		public Personne_correspondance_canalCommunication_contactabilite_element(){
		}
		public Personne_correspondance_canalCommunication_contactabilite_element(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode horodatageNode = responseNode.getChildElement('horodatage', 'http://gdfsuez.com/bef/calypso/personne');
			if(horodatageNode == null){
				this.horodatage = null;
			} else{
				gdfsuezComBefChpPivotV8.horodatageSimpleDt horodatageObj = new gdfsuezComBefChpPivotV8.horodatageSimpleDt(horodatageNode);
				nodesParsed.add(horodatageNode);
				this.horodatage = horodatageObj;
			}
			//System.debug(this.horodatage);            
			DOM.XmlNode type_xNode = responseNode.getChildElement('type', 'http://gdfsuez.com/bef/calypso/personne');
			if(type_xNode == null){
				this.type_x = null;
			} else{
				gdfsuezComBefChpPivotV8.listeValeursDt type_xObj = new gdfsuezComBefChpPivotV8.listeValeursDt(type_xNode);
				nodesParsed.add(type_xNode);
				this.type_x = type_xObj;
			}
			//System.debug(this.type_x);            
			DOM.XmlNode modeCollecteNode = responseNode.getChildElement('modeCollecte', 'http://gdfsuez.com/bef/calypso/personne');
			if(modeCollecteNode == null){
				this.modeCollecte = null;
			} else{
				gdfsuezComBefChpPivotV8.listeValeursDt modeCollecteObj = new gdfsuezComBefChpPivotV8.listeValeursDt(modeCollecteNode);
				nodesParsed.add(modeCollecteNode);
				this.modeCollecte = modeCollecteObj;
			}
			//System.debug(this.modeCollecte);          
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			gdfsuezComBefChpPivotV8.horodatageSimpleDt horodatageObj = this.horodatage;
			Dom.XmlNode horodatageNode = outerNode.addChildElement('horodatage', 'http://gdfsuez.com/bef/calypso/personne', '');
			if(horodatageObj != null){
				horodatageObj.populateXmlNode(horodatageNode);
			}
			
			gdfsuezComBefChpPivotV8.listeValeursDt type_xObj = this.type_x;
			Dom.XmlNode type_xNode = outerNode.addChildElement('type', 'http://gdfsuez.com/bef/calypso/personne', '');
			if(type_xObj != null){
				type_xObj.populateXmlNode(type_xNode);
			}
			
			gdfsuezComBefChpPivotV8.listeValeursDt modeCollecteObj = this.modeCollecte;
			Dom.XmlNode modeCollecteNode = outerNode.addChildElement('modeCollecte', 'http://gdfsuez.com/bef/calypso/personne', '');
			if(modeCollecteObj != null){
				modeCollecteObj.populateXmlNode(modeCollecteNode);
			}
		}
	}
	public class Personne_correspondance_canalCommunication_element {
		public gdfsuezComBefChpPivotV8.horodatageSimpleDt horodatage;
		public gdfsuezComBefChpPivotV8.listeValeursDt flag;
		public Boolean prefere;
		public String telephone;
		public gdfsuezComBefChpPivotV8.listeValeursDt type_x;
		public Integer ordre;
		public Boolean utiliserDePreference;
		public gdfsuezComBefCalypsoPersonneV8.adresseDt adresse;
		public gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_canalCommunication_contactabilite_element[] contactabilite;
		public gdfsuezComBefCalypsoPersonneV8.historiqueDt[] historique;
		public String mail;
		private String[] horodatage_type_info = new String[]{'horodatage','http://gdfsuez.com/bef/calypso/personne','horodatageSimpleDt','0','1','false'};
		private String[] flag_type_info = new String[]{'flag','http://gdfsuez.com/bef/calypso/personne','listeValeursDt','0','1','false'};
		private String[] prefere_type_info = new String[]{'prefere','http://gdfsuez.com/bef/calypso/personne','boolean','0','1','false'};
		private String[] telephone_type_info = new String[]{'telephone','http://gdfsuez.com/bef/calypso/personne','telephoneDt','0','1','false'};
		private String[] type_x_type_info = new String[]{'type','http://gdfsuez.com/bef/calypso/personne','listeValeursDt','0','1','false'};
		private String[] ordre_type_info = new String[]{'ordre','http://gdfsuez.com/bef/calypso/personne','int','0','1','false'};
		private String[] utiliserDePreference_type_info = new String[]{'utiliserDePreference','http://gdfsuez.com/bef/calypso/personne','boolean','0','1','false'};
		private String[] adresse_type_info = new String[]{'adresse','http://gdfsuez.com/bef/calypso/personne','adresseDt','0','1','false'};
		private String[] contactabilite_type_info = new String[]{'contactabilite','http://gdfsuez.com/bef/calypso/personne','','0','-1','false'};
		private String[] historique_type_info = new String[]{'historique','http://gdfsuez.com/bef/calypso/personne','historiqueDt','0','-1','false'};
		private String[] mail_type_info = new String[]{'mail','http://gdfsuez.com/bef/calypso/personne','string241','0','1','false'};
		private String[] apex_schema_type_info = new String[]{'http://gdfsuez.com/bef/calypso/personne','true','false'};
		private String[] field_order_type_info = new String[]{'horodatage','flag','prefere','telephone','type_x','ordre','utiliserDePreference','adresse','contactabilite','historique','mail'};
		public Personne_correspondance_canalCommunication_element(){
		}
		public Personne_correspondance_canalCommunication_element(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode horodatageNode = responseNode.getChildElement('horodatage', 'http://gdfsuez.com/bef/calypso/personne');
			if(horodatageNode == null){
				this.horodatage = null;
			} else{
				gdfsuezComBefChpPivotV8.horodatageSimpleDt horodatageObj = new gdfsuezComBefChpPivotV8.horodatageSimpleDt(horodatageNode);
				nodesParsed.add(horodatageNode);
				this.horodatage = horodatageObj;
			}
			//System.debug(this.horodatage);            
			DOM.XmlNode flagNode = responseNode.getChildElement('flag', 'http://gdfsuez.com/bef/calypso/personne');
			if(flagNode == null){
				this.flag = null;
			} else{
				gdfsuezComBefChpPivotV8.listeValeursDt flagObj = new gdfsuezComBefChpPivotV8.listeValeursDt(flagNode);
				nodesParsed.add(flagNode);
				this.flag = flagObj;
			}
			//System.debug(this.flag);          
			DOM.XmlNode prefereNode = responseNode.getChildElement('prefere', 'http://gdfsuez.com/bef/calypso/personne');
			this.prefere = (prefereNode == null) ? null : Boolean.valueOf(prefereNode.getText());
			nodesParsed.add(prefereNode);
			//System.debug(this.prefere);           
			DOM.XmlNode telephoneNode = responseNode.getChildElement('telephone', 'http://gdfsuez.com/bef/calypso/personne');
			this.telephone = (telephoneNode == null) ? null : telephoneNode.getText();
			nodesParsed.add(telephoneNode);
			//System.debug(this.telephone);         
			DOM.XmlNode type_xNode = responseNode.getChildElement('type', 'http://gdfsuez.com/bef/calypso/personne');
			if(type_xNode == null){
				this.type_x = null;
			} else{
				gdfsuezComBefChpPivotV8.listeValeursDt type_xObj = new gdfsuezComBefChpPivotV8.listeValeursDt(type_xNode);
				nodesParsed.add(type_xNode);
				this.type_x = type_xObj;
			}
			//System.debug(this.type_x);            
			DOM.XmlNode ordreNode = responseNode.getChildElement('ordre', 'http://gdfsuez.com/bef/calypso/personne');
			this.ordre = (ordreNode == null) ? null : Integer.valueOf(ordreNode.getText());
			nodesParsed.add(ordreNode);
			//System.debug(this.ordre);         
			DOM.XmlNode utiliserDePreferenceNode = responseNode.getChildElement('utiliserDePreference', 'http://gdfsuez.com/bef/calypso/personne');
			this.utiliserDePreference = (utiliserDePreferenceNode == null) ? null : Boolean.valueOf(utiliserDePreferenceNode.getText());
			nodesParsed.add(utiliserDePreferenceNode);
			//System.debug(this.utiliserDePreference);          
			DOM.XmlNode adresseNode = responseNode.getChildElement('adresse', 'http://gdfsuez.com/bef/calypso/personne');
			if(adresseNode == null){
				this.adresse = null;
			} else{
				gdfsuezComBefCalypsoPersonneV8.adresseDt adresseObj = new gdfsuezComBefCalypsoPersonneV8.adresseDt(adresseNode);
				nodesParsed.add(adresseNode);
				this.adresse = adresseObj;
			}
			//System.debug(this.adresse);           
			Dom.XmlNode[] contactabiliteChildren = responseNode.getChildElements();
			gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_canalCommunication_contactabilite_element[] contactabiliteList = new List<gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_canalCommunication_contactabilite_element>();
			if(contactabiliteChildren == null || contactabiliteChildren.size() == 0){
				this.contactabilite = null;
			} else{
				for(DOM.XmlNode childNode : contactabiliteChildren){
					if(childNode.GetName() == 'contactabilite'){
						gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_canalCommunication_contactabilite_element Obj = new gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_canalCommunication_contactabilite_element(childNode);
						contactabiliteList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.contactabilite = contactabiliteList;
			}
			//System.debug(this.contactabilite);            
			Dom.XmlNode[] historiqueChildren = responseNode.getChildElements();
			gdfsuezComBefCalypsoPersonneV8.historiqueDt[] historiqueList = new List<gdfsuezComBefCalypsoPersonneV8.historiqueDt>();
			if(historiqueChildren == null || historiqueChildren.size() == 0){
				this.historique = null;
			} else{
				for(DOM.XmlNode childNode : historiqueChildren){
					if(childNode.GetName() == 'historique'){
						gdfsuezComBefCalypsoPersonneV8.historiqueDt Obj = new gdfsuezComBefCalypsoPersonneV8.historiqueDt(childNode);
						historiqueList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.historique = historiqueList;
			}
			//System.debug(this.historique);            
			DOM.XmlNode mailNode = responseNode.getChildElement('mail', 'http://gdfsuez.com/bef/calypso/personne');
			this.mail = (mailNode == null) ? null : mailNode.getText();
			nodesParsed.add(mailNode);
			//System.debug(this.mail);          
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			/*gdfsuezComBefChpPivotV8.horodatageSimpleDt horodatageObj = this.horodatage;
			Dom.XmlNode horodatageNode = outerNode.addChildElement('horodatage', null, null);
			if(horodatageObj != null){
				horodatageObj.populateXmlNode(horodatageNode);
			}*/
			
			if(this.utiliserDePreference == true){
					Dom.XmlNode utiliserDePreferenceNode = outerNode.addChildElement('prefere', null, null);
					utiliserDePreferenceNode.addTextNode((this.utiliserDePreference == null) ? '' : String.valueOf(this.utiliserDePreference));
			}
			
			if(this.telephone != null){
				Dom.XmlNode telephoneNode = outerNode.addChildElement('telephone', null, null);
				telephoneNode.addTextNode((this.telephone == null) ? '' : this.telephone.replace('+33', '0'));
			}
			
			if(this.flag != null){
				gdfsuezComBefChpPivotV8.listeValeursDt flagObj = this.flag;
				Dom.XmlNode flagNode = outerNode.addChildElement('flag', null, null);
				flagObj.populateXmlNode(flagNode);
			}
				
			
			if(this.type_x != null){
				gdfsuezComBefChpPivotV8.listeValeursDt type_xObj = this.type_x;
				Dom.XmlNode type_xNode = outerNode.addChildElement('type', null, null);
				type_xObj.populateXmlNode(type_xNode);
			} 
			
			// Si présence d'une adresse ou d'un flag refus --> ne pas afficher ces 2 champs
			if(this.flag == null && this.adresse == null){
				if(this.ordre != null){
					Dom.XmlNode ordreNode = outerNode.addChildElement('ordre', null, null);
					ordreNode.addTextNode((this.ordre == null) ? '' : String.valueOf(this.ordre));
				}
			}
			
			if(this.adresse != null){
				gdfsuezComBefCalypsoPersonneV8.adresseDt adresseObj = this.adresse;
				Dom.XmlNode adresseNode = outerNode.addChildElement('adresse', null, null);
			
				adresseObj.populateXmlNode(adresseNode); 
			}
			
			if(this.telephone == null && this.adresse == null){         
				Dom.XmlNode mailNode = outerNode.addChildElement('mail', null, null);
				mailNode.addTextNode((this.mail == null) ? '' : this.mail);
			} 
			
			/*gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_canalCommunication_contactabilite_element[] contactabiliteObj = this.contactabilite;
			if(contactabiliteObj != null){
				for(gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_canalCommunication_contactabilite_element element: contactabiliteObj){
					Dom.XmlNode contactabiliteNode = outerNode.addChildElement('contactabilite', null, null);
					element.populateXmlNode(contactabiliteNode);
				}
			}   */      
			
			/*gdfsuezComBefCalypsoPersonneV8.historiqueDt[] historiqueObj = this.historique;
			if(historiqueObj != null){
				for(gdfsuezComBefCalypsoPersonneV8.historiqueDt element: historiqueObj){
					Dom.XmlNode historiqueNode = outerNode.addChildElement('historique', null, null);
					element.populateXmlNode(historiqueNode);
				}
			}*/
		}
	}
	public class Personne_correspondance_element {
		public String langueCorrespondance;
		public gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_canalCommunication_element[] canalCommunication;
		private String[] langueCorrespondance_type_info = new String[]{'langueCorrespondance','http://gdfsuez.com/bef/calypso/personne','string2','0','1','false'};
		private String[] canalCommunication_type_info = new String[]{'canalCommunication','http://gdfsuez.com/bef/calypso/personne','','0','-1','false'};
		private String[] apex_schema_type_info = new String[]{'http://gdfsuez.com/bef/calypso/personne','true','false'};
		private String[] field_order_type_info = new String[]{'langueCorrespondance','canalCommunication'};
		public Personne_correspondance_element(){
		}
		public Personne_correspondance_element(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode langueCorrespondanceNode = responseNode.getChildElement('langueCorrespondance', 'http://gdfsuez.com/bef/calypso/personne');
			this.langueCorrespondance = (langueCorrespondanceNode == null) ? null : langueCorrespondanceNode.getText();
			nodesParsed.add(langueCorrespondanceNode);
			//System.debug(this.langueCorrespondance);          
			Dom.XmlNode[] canalCommunicationChildren = responseNode.getChildElements();
			gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_canalCommunication_element[] canalCommunicationList = new List<gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_canalCommunication_element>();
			if(canalCommunicationChildren == null || canalCommunicationChildren.size() == 0){
				this.canalCommunication = null;
			} else{
				for(DOM.XmlNode childNode : canalCommunicationChildren){
					if(childNode.GetName() == 'canalCommunication'){
						gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_canalCommunication_element Obj = new gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_canalCommunication_element(childNode);
						canalCommunicationList.Add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.canalCommunication = canalCommunicationList;
			}
			//System.debug(this.canalCommunication);            
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			/*Dom.XmlNode langueCorrespondanceNode = outerNode.addChildElement('langueCorrespondance', null, null);
			langueCorrespondanceNode.addTextNode((this.langueCorrespondance == null) ? '' : this.langueCorrespondance);*/
			
			gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_canalCommunication_element[] canalCommunicationObj = this.canalCommunication;
			if(canalCommunicationObj != null){
				for(gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_canalCommunication_element element: canalCommunicationObj){
					Dom.XmlNode canalCommunicationNode = outerNode.addChildElement('canalCommunication', null, null);
					System.debug('*****' + element);
					element.populateXmlNode(canalCommunicationNode);
				}
			}           
		}
	}
	public class Personne_profilMarketing_element {
		public gdfsuezComBefChpPivotV8.listeValeursDt designation;
		public String valeurDesignation;
		private String[] designation_type_info = new String[]{'designation','http://gdfsuez.com/bef/calypso/personne','listeValeursDt','0','1','false'};
		private String[] valeurDesignation_type_info = new String[]{'valeurDesignation','http://gdfsuez.com/bef/calypso/personne','string','0','1','false'};
		private String[] apex_schema_type_info = new String[]{'http://gdfsuez.com/bef/calypso/personne','true','false'};
		private String[] field_order_type_info = new String[]{'designation','valeurDesignation'};
		public Personne_profilMarketing_element(){
		}
		public Personne_profilMarketing_element(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode designationNode = responseNode.getChildElement('designation', 'http://gdfsuez.com/bef/calypso/personne');
			if(designationNode == null){
				this.designation = null;
			} else{
				gdfsuezComBefChpPivotV8.listeValeursDt designationObj = new gdfsuezComBefChpPivotV8.listeValeursDt(designationNode);
				nodesParsed.add(designationNode);
				this.designation = designationObj;
			}
			//System.debug(this.designation);           
			DOM.XmlNode valeurDesignationNode = responseNode.getChildElement('valeurDesignation', 'http://gdfsuez.com/bef/calypso/personne');
			this.valeurDesignation = (valeurDesignationNode == null) ? null : valeurDesignationNode.getText();
			nodesParsed.add(valeurDesignationNode);
			//System.debug(this.valeurDesignation);         
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			gdfsuezComBefChpPivotV8.listeValeursDt designationObj = this.designation;
			Dom.XmlNode designationNode = outerNode.addChildElement('designation', null, null);
			if(designationObj != null){
				designationObj.populateXmlNode(designationNode);
			}
			Dom.XmlNode valeurDesignationNode = outerNode.addChildElement('valeurDesignation', null, null);
			valeurDesignationNode.addTextNode((this.valeurDesignation == null) ? '' : this.valeurDesignation);
		}
	}
	public class PersonneAbstract {
		public String idPersonne;
		private String[] idPersonne_type_info = new String[]{'idPersonne','http://gdfsuez.com/bef/calypso/personne','','0','1','false'};
		private String[] apex_schema_type_info = new String[]{'http://gdfsuez.com/bef/calypso/personne','true','false'};
		private String[] field_order_type_info = new String[]{'idPersonne'};
		public PersonneAbstract(){
		}
		public PersonneAbstract(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode idPersonneNode = responseNode.getChildElement('idPersonne', null);
			this.idPersonne = (idPersonneNode == null) ? null : idPersonneNode.getText();
			nodesParsed.add(idPersonneNode);
			//System.debug(this.idPersonne);            
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode idPersonneNode = outerNode.addChildElement('idPersonne', 'http://gdfsuez.com/bef/calypso/personne', '');
			idPersonneNode.addTextNode((this.idPersonne == null) ? '' : this.idPersonne);
		}
	}
	public class typologieMarcheDt {
		public gdfsuezComBefChpPivotV8.listeValeursDt typologie;
		public String niveau;
		private String[] typologie_type_info = new String[]{'typologie','http://gdfsuez.com/bef/calypso/personne','listeValeursDt','1','1','false'};
		private String[] niveau_type_info = new String[]{'niveau','http://gdfsuez.com/bef/calypso/personne','string','1','1','false'};
		private String[] apex_schema_type_info = new String[]{'http://gdfsuez.com/bef/calypso/personne','true','false'};
		private String[] field_order_type_info = new String[]{'typologie','niveau'};
		public typologieMarcheDt(){
		}
		public typologieMarcheDt(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode typologieNode = responseNode.getChildElement('typologie', 'http://gdfsuez.com/bef/calypso/personne');
			if(typologieNode == null){
				this.typologie = null;
			} else{
				gdfsuezComBefChpPivotV8.listeValeursDt typologieObj = new gdfsuezComBefChpPivotV8.listeValeursDt(typologieNode);
				nodesParsed.add(typologieNode);
				this.typologie = typologieObj;
			}
			//System.debug(this.typologie);         
			DOM.XmlNode niveauNode = responseNode.getChildElement('niveau', 'http://gdfsuez.com/bef/calypso/personne');
			this.niveau = (niveauNode == null) ? null : niveauNode.getText();
			nodesParsed.add(niveauNode);
			//System.debug(this.niveau);            
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			gdfsuezComBefChpPivotV8.listeValeursDt typologieObj = this.typologie;
			Dom.XmlNode typologieNode = outerNode.addChildElement('typologie', 'http://gdfsuez.com/bef/calypso/personne', '');
			if(typologieObj != null){
				typologieObj.populateXmlNode(typologieNode);
			}
			Dom.XmlNode niveauNode = outerNode.addChildElement('niveau', 'http://gdfsuez.com/bef/calypso/personne', '');
			if(this.niveau != null){
				niveauNode.addTextNode(this.niveau);
			}
		}
	}
}