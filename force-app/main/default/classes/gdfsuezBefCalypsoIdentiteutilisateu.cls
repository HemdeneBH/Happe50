//Generated by FuseIT WSDL2Apex (http://www.fuseit.com/Solutions/SFDC-Explorer/Help-WSDL-Parser.aspx)
//Methods Included: lireIdentiteUtilisateur
// Primary Port Class Name: Dependency	
public class gdfsuezBefCalypsoIdentiteutilisateu {
    private static final String s_ns0 = 'http://gdfsuez/bef/calypso/identiteUtilisateur/v3';
  /*   public class IdentiteUtilisateurPort {
        public String endpoint_x = 'http://localhost:8080/services/identiteUtilisateur/v3';
        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        private transient String[] ns_map_type_info = new String[]{'http://gdfsuez.com/bef/chp/pivot','gdfsuezComBefChpPivot_Utili','http://gdfsuez.com/bef/calypso/identiteUtilisateur','gdfsuezComBefCalypsoIdentiteutilisa'};
            public gdfsuezBefCalypsoIdentiteutilisateu.lireIdentiteUtilisateurResponse_element lireIdentiteUtilisateur(gdfsuezBefCalypsoIdentiteutilisateu.lireIdentiteUtilisateurDt lireIdentiteUtilisateurInput,gdfsuezComBefChpPivot_Utili.contextDt context) {
                gdfsuezBefCalypsoIdentiteutilisateu.lireIdentiteUtilisateur_element request_x = new gdfsuezBefCalypsoIdentiteutilisateu.lireIdentiteUtilisateur_element();
                gdfsuezBefCalypsoIdentiteutilisateu.lireIdentiteUtilisateurResponse_element response_x;
                request_x.lireIdentiteUtilisateurInput = lireIdentiteUtilisateurInput;
                request_x.context = context;   
                // A map of key-value pairs that represent the response that the external service sends after receiving the request. In each pair, the key is a response identifier. The value is the response object, which is an instance of a type that is created as part of the auto-generated stub class.
                Map<String, gdfsuezBefCalypsoIdentiteutilisateu.lireIdentiteUtilisateurResponse_element> response_map_x = new Map<String, gdfsuezBefCalypsoIdentiteutilisateu.lireIdentiteUtilisateurResponse_element>();
                
                response_map_x.put('response_x', response_x);
                
                WebServiceCallout.invoke(
                    this, // stub - An instance of the Apex class that is auto-generated from a WSDL (the stub class).
                    request_x, // request - The request to the external service. The request is an instance of a type that is created as part of the auto-generated stub class.
                    response_map_x, // response
                    new String[]{endpoint_x, //  the URL of the external web service
                        'tns:lireIdentiteUtilisateur', // The SOAP action.
                        s_ns0, // The request namespace.
                        'lireIdentiteUtilisateur', // The request name.
                        s_ns0, // The response namespace.
                        'lireIdentiteUtilisateurResponse', //  The response name.
                        'gdfsuezBefCalypsoIdentiteutilisateu.lireIdentiteUtilisateurResponse_element'} // The response type.
                );
                response_x = response_map_x.get('response_x');
                return response_x;
            }
    } */
    
    public class Dependency {
        public String endpoint_x = 'http://localhost:8080/services/identiteUtilisateur/v3';
        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        private transient String[] ns_map_type_info = new String[]{'http://gdfsuez.com/bef/chp/pivot','gdfsuezComBefChpPivot_Utili','http://gdfsuez.com/bef/calypso/identiteUtilisateur','gdfsuezComBefCalypsoIdentiteutilisa'};
            
            private DOM.XmlNode populateDoc(DOM.Document doc){
                String env = 'http://schemas.xmlsoap.org/soap/envelope/';
                String xsi = 'http://www.w3.org/2001/XMLSchema-instance';
                String xsd = 'http://www.w3.org/2001/XMLSchema';
                
                DOM.XmlNode envelope = doc.createRootElement('Envelope', env, 'soapenv');
                envelope.setNamespace('xsd', xsd);
                envelope.setNamespace('xsi', xsi);
                DOM.XmlNode header = envelope.addChildElement('Header', env, '');
               // AddHeader(header);
                DOM.XmlNode body = envelope.addChildElement('Body', env, '');
                return body;
            }
        
        private void AddHeader(DOM.XmlNode header){
            if(!Test.isRunningTest()){
                SM_Utils_TokenOctopus.addOcTokenToSOAPReq(header);
            }
        }
        
        public gdfsuezBefCalypsoIdentiteutilisateu.lireIdentiteUtilisateurResponse_element lireIdentiteUtilisateur_Http(gdfsuezBefCalypsoIdentiteutilisateu.lireIdentiteUtilisateurDt lireIdentiteUtilisateurInput,gdfsuezComBefChpPivot_Utili.contextDt context) {
            DOM.Document doc = new DOM.Document();
            DOM.XmlNode body = populateDoc(doc);
            DOM.XmlNode methodNode = body.addChildElement('lireIdentiteUtilisateur', s_ns0, '');
            gdfsuezBefCalypsoIdentiteutilisateu.lireIdentiteUtilisateur_element request_x = new gdfsuezBefCalypsoIdentiteutilisateu.lireIdentiteUtilisateur_element(lireIdentiteUtilisateurInput,context);
            request_x.populateXmlNode(methodNode);
            
            HttpRequest req = new HttpRequest();
            req.setEndpoint(endpoint_x);
            req.setClientCertificateName(Label.SM_CL_OctopusCertificate);
            req.setMethod('POST');
            req.setHeader('Content-Type', 'text/xml; charset=UTF-8');
            req.setHeader('SOAPAction', 'tns:lireIdentiteUtilisateur');
            if(timeout_x != null){
                req.setTimeout(timeout_x);
            }
            req.setBodyDocument(doc);
            System.debug('request =>'+doc.toXmlString());
            Http http = new Http();
            HTTPResponse res = http.send(req);
            System.debug('response  =>'+res.getBody());
            Dom.Document responseDoc = res.getBodyDocument();
            Dom.XmlNode rootNode = responseDoc.getRootElement();
            
            
            
            Dom.XmlNode bodyNode = rootNode.getChildElement('Body','http://schemas.xmlsoap.org/soap/envelope/');
            Dom.XmlNode identiteUtilisateurResponseNode = bodyNode.getChildElement('lireIdentiteUtilisateurResponse', 'http://gdfsuez/bef/calypso/identiteUtilisateur/v3');
            gdfsuezBefCalypsoIdentiteutilisateu.lireIdentiteUtilisateurResponse_element response_x = new gdfsuezBefCalypsoIdentiteutilisateu.lireIdentiteUtilisateurResponse_element(identiteUtilisateurResponseNode);
            return response_x;
        }
    }
    
    public class lireIdentiteUtilisateur_element {
        public gdfsuezBefCalypsoIdentiteutilisateu.lireIdentiteUtilisateurDt lireIdentiteUtilisateurInput;
        public gdfsuezComBefChpPivot_Utili.contextDt context;
        private transient String[] lireIdentiteUtilisateurInput_type_info = new String[]{'lireIdentiteUtilisateurInput',s_ns0,'lireIdentiteUtilisateurDt','1','1','false'};
            private transient String[] context_type_info = new String[]{'context',s_ns0,'contextDt','1','1','false'};
                private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
                    private transient String[] field_order_type_info = new String[]{'lireIdentiteUtilisateurInput','context'};
                        
                        public lireIdentiteUtilisateur_element(){
                        }
        public lireIdentiteUtilisateur_element(gdfsuezBefCalypsoIdentiteutilisateu.lireIdentiteUtilisateurDt lireIdentiteUtilisateurInput,gdfsuezComBefChpPivot_Utili.contextDt context){
            this.lireIdentiteUtilisateurInput = lireIdentiteUtilisateurInput;
            this.context = context;
        }
        public void populateXmlNode(Dom.XmlNode outerNode){
            
            //System.assertEquals('CreerPropositionCommerciale', outerNode.getName());
            
            gdfsuezBefCalypsoIdentiteutilisateu.lireIdentiteUtilisateurDt lireIdentiteUtilisateurInputObj = this.lireIdentiteUtilisateurInput;
            Dom.XmlNode lireIdentiteUtilisateurInputNode = outerNode.addChildElement('lireIdentiteUtilisateurInput', '', '');
            if(lireIdentiteUtilisateurInputObj != null){
                lireIdentiteUtilisateurInputObj.populateXmlNode(lireIdentiteUtilisateurInputNode);
            }
            
            gdfsuezComBefChpPivot_Utili.contextDt contextObj = this.context;
            Dom.XmlNode contextNode = outerNode.addChildElement('context', '', '');
            if(contextObj != null){
                contextObj.populateXmlNode(contextNode);
            }
        }
    }
    
    public class lireIdentiteUtilisateurDt {
        public gdfsuezComBefCalypsoIdentiteutilisa.IdentiteUtilisateurAbstract identiteUtilisateur;
        private transient String[] identiteUtilisateur_type_info = new String[]{'identiteUtilisateur',s_ns0,'IdentiteUtilisateurAbstract','1','1','false'};
            private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
                private transient String[] field_order_type_info = new String[]{'identiteUtilisateur'};
                    
                    public lireIdentiteUtilisateurDt(){
                    }
        public lireIdentiteUtilisateurDt(DOM.XmlNode responseNode){
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
            DOM.XmlNode identiteUtilisateurNode = responseNode.getChildElement('identiteUtilisateur', s_ns0);
            if(identiteUtilisateurNode == null){
                this.identiteUtilisateur = null;
            } else{
                gdfsuezComBefCalypsoIdentiteutilisa.IdentiteUtilisateurAbstract IdentiteUtilisateurAbstractObj = new gdfsuezComBefCalypsoIdentiteutilisa.IdentiteUtilisateurAbstract(identiteUtilisateurNode);
                nodesParsed.add(identiteUtilisateurNode);
                this.identiteUtilisateur = IdentiteUtilisateurAbstractObj;
            }
            //System.debug(this.IdentiteUtilisateurAbstract);
        }
        public void populateXmlNode(Dom.XmlNode outerNode){
            
            gdfsuezComBefCalypsoIdentiteutilisa.IdentiteUtilisateurAbstract IdentiteUtilisateurAbstractObj = this.identiteUtilisateur;
            Dom.XmlNode identiteUtilisateurNode = outerNode.addChildElement('identiteUtilisateur', '', '');
            if(IdentiteUtilisateurAbstractObj != null){
                IdentiteUtilisateurAbstractObj.populateXmlNode(identiteUtilisateurNode);
            }
        }
    }
    
    public class lireIdentiteUtilisateurResponse_element {
        public gdfsuezBefCalypsoIdentiteutilisateu.lireIdentiteUtilisateurResponseDt lireIdentiteUtilisateurOutput;
        public gdfsuezComBefChpPivot_Utili.retourTraitementMessagesDt messageRetours;
        private transient String[] lireIdentiteUtilisateurOutput_type_info = new String[]{'lireIdentiteUtilisateurOutput',s_ns0,'lireIdentiteUtilisateurResponseDt','0','1','false'};
            private transient String[] messageRetours_type_info = new String[]{'messageRetours',s_ns0,'retourTraitementMessagesDt','1','1','false'};
                private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
                    private transient String[] field_order_type_info = new String[]{'lireIdentiteUtilisateurOutput','messageRetours'};   
                         public lireIdentiteUtilisateurResponse_element(){
                    }
        
        public lireIdentiteUtilisateurResponse_element(DOM.XmlNode responseNode){
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
            DOM.XmlNode lireIdentiteUtilisateurOutputNode = responseNode.getChildElement('lireIdentiteUtilisateurOutput', null);
            
            if(lireIdentiteUtilisateurOutputNode == null){
                this.lireIdentiteUtilisateurOutput = null;
            } else{
                gdfsuezBefCalypsoIdentiteutilisateu.lireIdentiteUtilisateurResponseDt lireIdentiteUtilisateurOutputObj = new gdfsuezBefCalypsoIdentiteutilisateu.lireIdentiteUtilisateurResponseDt(lireIdentiteUtilisateurOutputNode);
                nodesParsed.add(lireIdentiteUtilisateurOutputNode);
                this.lireIdentiteUtilisateurOutput = lireIdentiteUtilisateurOutputObj;
            }
            
            DOM.XmlNode messageRetoursNode = responseNode.getChildElement('messageRetours',null);
            if(messageRetoursNode == null){
                this.messageRetours = null;
            } else{
                gdfsuezComBefChpPivot_Utili.retourTraitementMessagesDt messageRetoursObj = new gdfsuezComBefChpPivot_Utili.retourTraitementMessagesDt(messageRetoursNode);
                nodesParsed.add(messageRetoursNode);
                this.messageRetours = messageRetoursObj;
            }
        }
      /*   public void populateXmlNode(Dom.XmlNode outerNode){
            gdfsuezBefCalypsoIdentiteutilisateu.lireIdentiteUtilisateurResponseDt lireIdentiteUtilisateurOutputObj = this.lireIdentiteUtilisateurOutput;
            Dom.XmlNode lireIdentiteUtilisateurOutputNode = outerNode.addChildElement('lireIdentiteUtilisateurOutput', '', '');
            if(lireIdentiteUtilisateurOutputObj != null){
                lireIdentiteUtilisateurOutputObj.populateXmlNode(lireIdentiteUtilisateurOutputNode);
            }
            
            
            gdfsuezComBefChpPivot_Utili.retourTraitementMessagesDt messageRetoursObj = this.messageRetours;
            Dom.XmlNode messageRetoursNode = outerNode.addChildElement('messageRetours', '', '');
            if(messageRetoursObj != null){
               messageRetoursObj.populateXmlNode(messageRetoursNode);
            }
        } */
    }
    
    public class lireIdentiteUtilisateurResponseDt {
        public gdfsuezComBefCalypsoIdentiteutilisa.identiteUtilisateur identiteUtilisateur;
        private transient String[] identiteUtilisateur_type_info = new String[]{'identiteUtilisateur',s_ns0,'identiteUtilisateur','1','1','false'};
            private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
                private transient String[] field_order_type_info = new String[]{'identiteUtilisateur'};
                    
                       public lireIdentiteUtilisateurResponseDt(){
                    }
        public lireIdentiteUtilisateurResponseDt(DOM.XmlNode responseNode){
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
            DOM.XmlNode identiteUtilisateurNode = responseNode.getChildElement('identiteUtilisateur', null);
            if(identiteUtilisateurNode == null){
                this.identiteUtilisateur = null;
            } else{
                gdfsuezComBefCalypsoIdentiteutilisa.identiteUtilisateur identiteUtilisateurObj = new gdfsuezComBefCalypsoIdentiteutilisa.identiteUtilisateur(identiteUtilisateurNode);
                nodesParsed.add(identiteUtilisateurNode);
                this.identiteUtilisateur = identiteUtilisateurObj;
            }
        }
      /*  public void populateXmlNode(Dom.XmlNode outerNode){
            
            gdfsuezComBefCalypsoIdentiteutilisa.identiteUtilisateur identiteUtilisateurObj = this.identiteUtilisateur;
            Dom.XmlNode identiteUtilisateurNode = outerNode.addChildElement('identiteUtilisateur', '', '');
            if(identiteUtilisateurObj != null){
                identiteUtilisateurObj.populateXmlNode(identiteUtilisateurNode);
            }
        } */
                    }
}