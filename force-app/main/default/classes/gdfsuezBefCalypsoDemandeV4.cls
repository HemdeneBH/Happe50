/**
 * @author            : Mohamed Aamer
 * @last modified on  : 06-14-2022
 * @last modified by  : Mohamed Aamer
**/
//Generated by FuseIT WSDL2Apex (http://www.fuseit.com/Solutions/SFDC-Explorer/Help-WSDL-Parser.aspx)
//Methods Included: LireDemande, RechercherDemande
//Methods Excluded: CreerDemande, MajDemande
// Primary Port Class Name: Dependency	
public class gdfsuezBefCalypsoDemandeV4 {
	private static final String s_ns0 = 'http://gdfsuez/bef/calypso/demande/v4';
    public static DateTime parseDateTime(String nodeText){
		String iso8601 = nodeText;
		JSONParser parser = JSON.createParser( '{"t":"' + iso8601 + '"}');
		parser.nextToken();
		parser.nextValue();
		DateTime dt = parser.getDateTimeValue();
		return dt;
	}
	public class Dependency implements ITF006_SoapRequestMock {
		private String serviceId;
		public String endpoint_x = 'http://localhost:8080/services/Demande/v4';
		public Map<String,String> inputHttpHeaders_x;
		public Map<String,String> outputHttpHeaders_x;
		public String clientCertName_x;
		public String clientCert_x;
		public String clientCertPasswd_x;
		public Integer timeout_x;
		private transient String[] ns_map_type_info = new String[]{'http://gdfsuez.com/bef/chp/pivot','gdfsuezComBefChpPivotDemande','http://gdfsuez.com/bef/calypso/demande','gdfsuezComBefCalypsoDemande','http://gdfsuez.com/bef/calypso/personne','gdfsuezComBefCalypsoPersonne'};
		
        public String getServiceId(){
            return serviceId;
        }
        public void setServiceId(String serviceId){
            this.serviceId = serviceId;
        }
		public gdfsuezBefCalypsoDemandeV4.lireDemandeResponse_element LireDemande_Http(gdfsuezBefCalypsoDemandeV4.lireDemandeInputDt lireDemandeInput) {
            String[] demandeIds = lireDemandeInput.listeIdDemande.idDemande;
            System.debug('demandeIds: '+demandeIds);
            String bodyReq = '<?xml version=\'1.0\' encoding=\'UTF-8\'?>'+
            '<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">'+
                '<SOAP-ENV:Body>'+
                    '<v4:lireDemande xmlns:v4="http://gdfsuez/bef/calypso/demande/v4">'+
                        '<lireDemandeInput>'+
                            '<listeIdDemande>';
            for (String idDemande : demandeIds) {
                bodyReq=bodyReq+'<idDemande>'+idDemande+'</idDemande>';
            }
            bodyReq=bodyReq+'</listeIdDemande>'+
            '</lireDemandeInput>'+
            '<context>'+
                '<version>4.0</version>'+
                '<systemPath>'+
                    '<system>'+
                        '<systemId>0</systemId>'+
                    '</system>'+
                '</systemPath>'+
                '<allowCache>true</allowCache>'+
            '</context>'+
            '</v4:lireDemande>'+
            '</SOAP-ENV:Body>'+
            '</SOAP-ENV:Envelope>';
            DOM.Document doc = new DOM.Document();
            doc.load(bodyReq);
            Dom.XmlNode lireDemandeResponseNode = SM_WS200_Demande.lireDemandeService('POST', doc, 'Body', 'http://schemas.xmlsoap.org/soap/envelope/', 'lireDemandeResponse', 'http://gdfsuez/bef/calypso/demande/v4');
            System.debug('lireDemandeResponseNode: '+lireDemandeResponseNode);
            gdfsuezBefCalypsoDemandeV4.lireDemandeResponse_element response_x = new gdfsuezBefCalypsoDemandeV4.lireDemandeResponse_element(lireDemandeResponseNode);
            return response_x;
        }
        private DOM.XmlNode populateDoc(DOM.Document doc){
            String env = 'http://schemas.xmlsoap.org/soap/envelope/';

          DOM.XmlNode envelope = doc.createRootElement('soapenv:Envelope', null, null);
            envelope.setNamespace('v4', 'http://gdfsuez/bef/calypso/demande/v4');
            envelope.setNamespace('soapenv', 'http://schemas.xmlsoap.org/soap/envelope/');

            DOM.XmlNode header = envelope.addChildElement('soapenv:Header', null, null);
           if(userInfo.getUserType() !=  Label.SM_userTypeSelfcare){
               AddHeader(header);
            }
            DOM.XmlNode body = doc.getRootElement().addChildElement('soapenv:Body', null, null);
            return body;
        }
        private void AddHeader(DOM.XmlNode header){
             if(!Test.isRunningTest() && !HP_Constantes.IS_HAPPE_PROFILE){
             	SM_Utils_TokenOctopus.addOcTokenToSOAPReq(header);
             }
        }
        public gdfsuezBefCalypsoDemandeV4.rechercherDemandeResponse_element RechercherDemande_Http(gdfsuezBefCalypsoDemandeV4.rechercherDemandeInputDt rechercherDemandeInput) {
            String body = '<?xml version=\'1.0\' encoding=\'UTF-8\'?>'+
            '<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">'+
                '<SOAP-ENV:Body>'+
                    '<v4:rechercherDemande xmlns:v4="http://gdfsuez/bef/calypso/demande/v4">'+
                        '<rechercherDemandeInput>'+
                            '<idPersonne>'+rechercherDemandeInput.idPersonne+'</idPersonne>'+
                            '<dateCreationDemandeDu>'+rechercherDemandeInput.dateCreationDemandeDu.formatGmt('yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'')+'</dateCreationDemandeDu>'+
                            '<dateCreationDemandeAu>'+rechercherDemandeInput.dateCreationDemandeAu.formatGmt('yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'')+'</dateCreationDemandeAu>'+
                        '</rechercherDemandeInput>'+
                        '<context>'+
                            '<version>4.0</version>'+
                            '<systemPath>'+
                                '<system>'+
                                    '<systemId>0</systemId>'+
                                '</system>'+
                            '</systemPath>'+
                            '<allowCache>true</allowCache>'+
                        '</context>'+
                    '</v4:rechercherDemande>'+
                '</SOAP-ENV:Body>'+
            '</SOAP-ENV:Envelope>';
            
            DOM.Document doc = new DOM.Document();
            doc.load(body);
            
            Dom.XmlNode rechercherDemandeResponseNode = SM_WS200_Demande.rechercherDemandeService('POST', doc, 'Body', 'http://schemas.xmlsoap.org/soap/envelope/', 'rechercherDemandeResponse', 'http://gdfsuez/bef/calypso/demande/v4');

            gdfsuezBefCalypsoDemandeV4.rechercherDemandeResponse_element response_x = new gdfsuezBefCalypsoDemandeV4.rechercherDemandeResponse_element(rechercherDemandeResponseNode);
            return response_x;
        }
	}
	/* public class lireDemande_element {
		public gdfsuezBefCalypsoDemandeV4.lireDemandeInputDt lireDemandeInput;
		public gdfsuezComBefChpPivotDemande.contextDt context;
		private transient String[] lireDemandeInput_type_info = new String[]{'lireDemandeInput',s_ns0,'lireDemandeInputDt','1','1','false'};
		private transient String[] context_type_info = new String[]{'context',s_ns0,'contextDt','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'lireDemandeInput','context'};
	} */
	public class lireDemandeInputDt {
		public gdfsuezBefCalypsoDemandeV4.lireDemandeInputDt_listeIdDemande_element listeIdDemande;
		private transient String[] listeIdDemande_type_info = new String[]{'listeIdDemande',s_ns0,'','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'listeIdDemande'};
	}
	public class lireDemandeInputDt_listeIdDemande_element {
		// Restriction enumeration: 
		public String[] idDemande;
		private transient String[] idDemande_type_info = new String[]{'idDemande',s_ns0,'string10','1','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'idDemande'};
	}
	public class lireDemandeOutputDt {
		public gdfsuezBefCalypsoDemandeV4.lireDemandeOutputDt_listeDemande_element[] listeDemande;
		private transient String[] listeDemande_type_info = new String[]{'listeDemande',s_ns0,'','0','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'listeDemande'};

        public lireDemandeOutputDt(){}

        public lireDemandeOutputDt(DOM.XmlNode responseNode){
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
            Dom.XmlNode[] lireDemandeChildren = responseNode.getChildElements();
            gdfsuezBefCalypsoDemandeV4.lireDemandeOutputDt_listeDemande_element[] demandeList = new List<gdfsuezBefCalypsoDemandeV4.lireDemandeOutputDt_listeDemande_element>();
            if(lireDemandeChildren == null || lireDemandeChildren.size() == 0){
                this.listeDemande = null;
            } else{
                for(DOM.XmlNode childNode : lireDemandeChildren){
                    if(childNode.GetName() == 'listeDemande'){
                        gdfsuezBefCalypsoDemandeV4.lireDemandeOutputDt_listeDemande_element Obj = new gdfsuezBefCalypsoDemandeV4.lireDemandeOutputDt_listeDemande_element(childNode);
                        demandeList.Add(Obj);
                        nodesParsed.add(childNode);
                    }
                }
                this.listeDemande = demandeList;
            }
        }
	}
	public class lireDemandeOutputDt_listeDemande_element {
		public String idDemande;
		public gdfsuezComBefChpPivotDemande.listeValeursDt prioriteDemande;
		public gdfsuezComBefChpPivotDemande.listeValeursDt complexiteDemande;
		public String texteLibreDemande;
		public gdfsuezComBefChpPivotDemande.listeValeursDt typeDemande;
		// Restriction enumeration: 
		public String codeFormulaireExterne;
		public gdfsuezComBefChpPivotDemande.listeValeursDt resultatDemande;
		// Restriction enumeration: 
		public String refExterne;
		public DateTime dateCreation;
		public gdfsuezComBefChpPivotDemande.listeValeursDt canalDemande;
		// Restriction enumeration: 
		public String choixSVI;
		public DateTime dateDebut;
		public DateTime dateFin;
		public gdfsuezComBefChpPivotDemande.listeValeursDt motifDemande;
		public DateTime dateModification;
		public DateTime dateEffetCPV;
		// Restriction enumeration: 
		public String codeCampagne;
		public gdfsuezComBefChpPivotDemande.listeValeursDt statutDemande;
		// Restriction enumeration: 
		public String codeTSA;
		// Restriction enumeration: 
		public String codePostal;
		public gdfsuezComBefChpPivotDemande.objetLieDt[] objetLie;
		public gdfsuezComBefChpPivotDemande.refPersonneDt[] refPersonne;
		public gdfsuezComBefChpPivotDemande.dateDt[] listeDate;
		private transient String[] idDemande_type_info = new String[]{'idDemande',s_ns0,'','1','1','false'};
		private transient String[] prioriteDemande_type_info = new String[]{'prioriteDemande',s_ns0,'listeValeursDt','0','1','false'};
		private transient String[] complexiteDemande_type_info = new String[]{'complexiteDemande',s_ns0,'listeValeursDt','0','1','false'};
		private transient String[] texteLibreDemande_type_info = new String[]{'texteLibreDemande',s_ns0,'string','0','1','false'};
		private transient String[] typeDemande_type_info = new String[]{'typeDemande',s_ns0,'listeValeursDt','1','1','false'};
		private transient String[] codeFormulaireExterne_type_info = new String[]{'codeFormulaireExterne',s_ns0,'string100','0','1','false'};
		private transient String[] resultatDemande_type_info = new String[]{'resultatDemande',s_ns0,'listeValeursDt','0','1','false'};
		private transient String[] refExterne_type_info = new String[]{'refExterne',s_ns0,'string20','0','1','false'};
		private transient String[] dateCreation_type_info = new String[]{'dateCreation',s_ns0,'dateTime','0','1','false'};
		private transient String[] canalDemande_type_info = new String[]{'canalDemande',s_ns0,'listeValeursDt','0','1','false'};
		private transient String[] choixSVI_type_info = new String[]{'choixSVI',s_ns0,'string100','0','1','false'};
		private transient String[] dateDebut_type_info = new String[]{'dateDebut',s_ns0,'dateTime','0','1','false'};
		private transient String[] dateFin_type_info = new String[]{'dateFin',s_ns0,'dateTime','0','1','false'};
		private transient String[] motifDemande_type_info = new String[]{'motifDemande',s_ns0,'listeValeursDt','0','1','false'};
		private transient String[] dateModification_type_info = new String[]{'dateModification',s_ns0,'dateTime','0','1','false'};
		private transient String[] dateEffetCPV_type_info = new String[]{'dateEffetCPV',s_ns0,'dateTime','0','1','false'};
		private transient String[] codeCampagne_type_info = new String[]{'codeCampagne',s_ns0,'string9','0','1','false'};
		private transient String[] statutDemande_type_info = new String[]{'statutDemande',s_ns0,'listeValeursDt','0','1','false'};
		private transient String[] codeTSA_type_info = new String[]{'codeTSA',s_ns0,'string40','0','1','false'};
		private transient String[] codePostal_type_info = new String[]{'codePostal',s_ns0,'string10','0','1','false'};
		private transient String[] objetLie_type_info = new String[]{'objetLie',s_ns0,'objetLieDt','0','-1','false'};
		private transient String[] refPersonne_type_info = new String[]{'refPersonne',s_ns0,'refPersonneDt','1','-1','false'};
		private transient String[] listeDate_type_info = new String[]{'listeDate',s_ns0,'dateDt','0','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'idDemande','prioriteDemande','complexiteDemande','texteLibreDemande','typeDemande','codeFormulaireExterne','resultatDemande','refExterne','dateCreation','canalDemande','choixSVI','dateDebut','dateFin','motifDemande','dateModification','dateEffetCPV','codeCampagne','statutDemande','codeTSA','codePostal','objetLie','refPersonne','listeDate'};

        public lireDemandeOutputDt_listeDemande_element(){}
        
        public lireDemandeOutputDt_listeDemande_element(DOM.XmlNode responseNode){
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
            DOM.XmlNode idDemandeNode = responseNode.getChildElement('idDemande', null);
            this.idDemande = (idDemandeNode == null) ? null : idDemandeNode.getText();
            nodesParsed.add(idDemandeNode);

            DOM.XmlNode texteLibreDemandeNode = responseNode.getChildElement('texteLibreDemande', null);
            this.texteLibreDemande = (texteLibreDemandeNode == null) ? null : texteLibreDemandeNode.getText();
            nodesParsed.add(texteLibreDemandeNode);
            
            DOM.XmlNode dateCreationNode = responseNode.getChildElement('dateCreation', null);
            this.dateCreation = (dateCreationNode == null) ? null : gdfsuezBefCalypsoDemandeV4.parseDateTime(dateCreationNode.getText());
            nodesParsed.add(dateCreationNode);
            
            DOM.XmlNode objetLieNode = responseNode.getChildElement('objetLie', null);
            if(objetLieNode == null){
                this.objetLie = null;
            } else{
                gdfsuezComBefChpPivotDemande.objetLieDt[] objetLieObjList = new List<gdfsuezComBefChpPivotDemande.objetLieDt>();
                gdfsuezComBefChpPivotDemande.objetLieDt objetLieObj = new gdfsuezComBefChpPivotDemande.objetLieDt(objetLieNode);
                objetLieObjList.add(objetLieObj);
                nodesParsed.add(objetLieNode);
                this.objetLie = objetLieObjList;
            }

            DOM.XmlNode[] refPersonneNode = responseNode.getChildElements();
            if(refPersonneNode == null){
                this.refPersonne = null;
            } else{
                gdfsuezComBefChpPivotDemande.refPersonneDt[] refPersonneObjList = new List<gdfsuezComBefChpPivotDemande.refPersonneDt>();
                for(DOM.XmlNode childNode : refPersonneNode){
                    if(childNode.GetName() == 'refPersonne'){
                        gdfsuezComBefChpPivotDemande.refPersonneDt refPersonneObj = new gdfsuezComBefChpPivotDemande.refPersonneDt(childNode);
                        refPersonneObjList.add(refPersonneObj);
                        nodesParsed.add(childNode);
                    }
                }
                this.refPersonne = refPersonneObjList;
            }
            
            DOM.XmlNode canalDemandeNode = responseNode.getChildElement('canalDemande', null);
            if(canalDemandeNode == null){
                this.canalDemande = null;
            } else{
                gdfsuezComBefChpPivotDemande.listeValeursDt canalDemandeObj = new gdfsuezComBefChpPivotDemande.listeValeursDt(canalDemandeNode);
                nodesParsed.add(canalDemandeNode);
                this.canalDemande = canalDemandeObj;
            }
            
            DOM.XmlNode statutDemandeNode = responseNode.getChildElement('statutDemande', null);
            if(statutDemandeNode == null){
                this.statutDemande = null;
            } else{
                gdfsuezComBefChpPivotDemande.listeValeursDt statutDemandeObj = new gdfsuezComBefChpPivotDemande.listeValeursDt(statutDemandeNode);
                nodesParsed.add(statutDemandeNode);
                this.statutDemande = statutDemandeObj;
            }

            DOM.XmlNode typeDemandeNode = responseNode.getChildElement('typeDemande', null);
            if(typeDemandeNode == null){
                this.typeDemande = null;
            } else{
                gdfsuezComBefChpPivotDemande.listeValeursDt typeDemandeObj = new gdfsuezComBefChpPivotDemande.listeValeursDt(typeDemandeNode);
                nodesParsed.add(typeDemandeNode);
                this.typeDemande = typeDemandeObj;
            }

            DOM.XmlNode motifDemandeNode = responseNode.getChildElement('motifDemande', null);
            if(motifDemandeNode == null){
                this.motifDemande = null;
            } else{
                gdfsuezComBefChpPivotDemande.listeValeursDt motifDemandeObj = new gdfsuezComBefChpPivotDemande.listeValeursDt(motifDemandeNode);
                nodesParsed.add(motifDemandeNode);
                this.motifDemande = motifDemandeObj;
            }
            
        }
	}
	public class lireDemandeResponse_element {
		public gdfsuezBefCalypsoDemandeV4.lireDemandeOutputDt lireDemandeResponseOutput;
		public gdfsuezComBefChpPivotDemande.retourTraitementMessagesDt messageRetours;
		private transient String[] lireDemandeResponseOutput_type_info = new String[]{'lireDemandeResponseOutput',s_ns0,'lireDemandeOutputDt','0','1','false'};
		private transient String[] messageRetours_type_info = new String[]{'messageRetours',s_ns0,'retourTraitementMessagesDt','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'lireDemandeResponseOutput','messageRetours'};

        public lireDemandeResponse_element(){
        }

        public lireDemandeResponse_element(DOM.XmlNode responseNode){
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
            DOM.XmlNode lireDemandeResponseOutputNode = responseNode.getChildElement('lireDemandeResponseOutput', null);
            if(lireDemandeResponseOutputNode == null){
                this.lireDemandeResponseOutput = null;
            } else{
                gdfsuezBefCalypsoDemandeV4.lireDemandeOutputDt lireDemandeResponseOutputObj = new gdfsuezBefCalypsoDemandeV4.lireDemandeOutputDt(lireDemandeResponseOutputNode);
                nodesParsed.add(lireDemandeResponseOutputNode);
                this.lireDemandeResponseOutput = lireDemandeResponseOutputObj;
            }
            DOM.XmlNode messageRetoursNode = responseNode.getChildElement('messageRetours', null);
            if(messageRetoursNode == null){
                this.messageRetours = null;
            } else{
                gdfsuezComBefChpPivotDemande.retourTraitementMessagesDt messageRetoursObj = new gdfsuezComBefChpPivotDemande.retourTraitementMessagesDt(messageRetoursNode);
                nodesParsed.add(messageRetoursNode);
                this.messageRetours = messageRetoursObj;
            }
        }
	}
	/* public class majDemandeInputDt {
		public gdfsuezBefCalypsoDemandeV4.demandeMajDt demande;
		private transient String[] demande_type_info = new String[]{'demande',s_ns0,'demandeMajDt','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'demande'};
	}
	public class majDemandeOutputDt {
		public gdfsuezBefCalypsoDemandeV4.DemandeAbstract demande;
		private transient String[] demande_type_info = new String[]{'demande',s_ns0,'DemandeAbstract','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'demande'};
	} */
	/* public class rechercherDemande_element {
		public gdfsuezBefCalypsoDemandeV4.rechercherDemandeInputDt rechercherDemandeInput;
		public gdfsuezComBefChpPivotDemande.contextDt context;
		private transient String[] rechercherDemandeInput_type_info = new String[]{'rechercherDemandeInput',s_ns0,'rechercherDemandeInputDt','1','1','false'};
		private transient String[] context_type_info = new String[]{'context',s_ns0,'contextDt','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'rechercherDemandeInput','context'};

        public rechercherDemande_element(){}

        public rechercherDemande_element(gdfsuezBefCalypsoDemandeV4.rechercherDemandeInputDt rechercherDemandeInput,gdfsuezComBefChpPivotDemande.contextDt context){
            this.rechercherDemandeInput = rechercherDemandeInput;
            this.context = context;
        }

        public void populateXmlNode(Dom.XmlNode outerNode){
            gdfsuezBefCalypsoDemandeV4.rechercherDemandeInputDt rechercherDemandeInputObj = this.rechercherDemandeInput;
            Dom.XmlNode rechercherDemandeInputNode = outerNode.addChildElement('rechercherDemandeInput', null, null);
            if(rechercherDemandeInputObj != null){
                rechercherDemandeInputObj.populateXmlNode(rechercherDemandeInputNode);
            }

            gdfsuezComBefChpPivotDemande.contextDt contextObj = this.context;
            Dom.XmlNode contextNode = outerNode.addChildElement('context', null, null);
            if(contextObj != null){
                contextObj.populateXmlNode(contextNode);
            }
        }
	} */
	public class rechercherDemandeInputDt {
		// Restriction enumeration: 
		public String idPersonne;
		public gdfsuezComBefChpPivotDemande.listeValeursDt typeDemande;
		public gdfsuezComBefChpPivotDemande.listeValeursDt statutDemande;
		public gdfsuezComBefChpPivotDemande.listeValeursDt motifDemande;
		public DateTime dateCreationDemandeDu;
		public DateTime dateCreationDemandeAu;
		//public gdfsuezComBefChpPivotDemande.searchControlRequestHeaderDt searchControlRequest;
		private transient String[] idPersonne_type_info = new String[]{'idPersonne',s_ns0,'string10','0','1','false'};
		private transient String[] typeDemande_type_info = new String[]{'typeDemande',s_ns0,'listeValeursDt','0','1','false'};
		private transient String[] statutDemande_type_info = new String[]{'statutDemande',s_ns0,'listeValeursDt','0','1','false'};
		private transient String[] motifDemande_type_info = new String[]{'motifDemande',s_ns0,'listeValeursDt','0','1','false'};
		private transient String[] dateCreationDemandeDu_type_info = new String[]{'dateCreationDemandeDu',s_ns0,'dateTime','0','1','false'};
		private transient String[] dateCreationDemandeAu_type_info = new String[]{'dateCreationDemandeAu',s_ns0,'dateTime','0','1','false'};
		private transient String[] searchControlRequest_type_info = new String[]{'searchControlRequest',s_ns0,'searchControlRequestHeaderDt','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'idPersonne','typeDemande','statutDemande','motifDemande','dateCreationDemandeDu','dateCreationDemandeAu','searchControlRequest'};
	
        public void populateXmlNode(Dom.XmlNode outerNode){
            
            Dom.XmlNode idPersonneNode = outerNode.addChildElement('idPersonne', s_ns0, '');
            idPersonneNode.addTextNode((this.idPersonne == null) ? '' : this.idPersonne);

            Dom.XmlNode dateCreationDemandeDuNode = outerNode.addChildElement('dateCreationDemandeDu', s_ns0, '');
            dateCreationDemandeDuNode.addTextNode((this.dateCreationDemandeDu == null) ? '' : String.valueOf(this.dateCreationDemandeDu));

            Dom.XmlNode dateCreationDemandeAuNode = outerNode.addChildElement('dateCreationDemandeAu', s_ns0, '');
            dateCreationDemandeAuNode.addTextNode((this.dateCreationDemandeAu == null) ? '' : String.valueOf(this.dateCreationDemandeAu));

            gdfsuezComBefChpPivotDemande.listeValeursDt typeDemandeObj = this.typeDemande;
            Dom.XmlNode typeDemandeNode = outerNode.addChildElement('typeDemande', s_ns0, '');
            if(typeDemandeObj != null){
                typeDemandeObj.populateXmlNode(typeDemandeNode);
            }

            gdfsuezComBefChpPivotDemande.listeValeursDt statutDemandeObj = this.statutDemande;
            Dom.XmlNode statutDemandeNode = outerNode.addChildElement('statutDemande', s_ns0, '');
            if(statutDemandeObj != null){
                statutDemandeObj.populateXmlNode(statutDemandeNode);
            }

            gdfsuezComBefChpPivotDemande.listeValeursDt motifDemandeObj = this.motifDemande;
            Dom.XmlNode motifDemandeNode = outerNode.addChildElement('motifDemande', s_ns0, '');
            if(motifDemandeObj != null){
                motifDemandeObj.populateXmlNode(motifDemandeNode);
            }
        }
    }
	public class rechercherDemandeOutputDt {
		// Restriction enumeration: 
		public String[] idPersonne;
		public gdfsuezBefCalypsoDemandeV4.rechercherDemandeOutputDt_listeDemande_element[] listeDemande;
		//public gdfsuezComBefChpPivotDemande.paginationDt searchControlResponse;
		private transient String[] idPersonne_type_info = new String[]{'idPersonne',s_ns0,'string10','1','-1','false'};
		private transient String[] listeDemande_type_info = new String[]{'listeDemande',s_ns0,'','1','-1','false'};
		private transient String[] searchControlResponse_type_info = new String[]{'searchControlResponse',s_ns0,'paginationDt','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'idPersonne','listeDemande','searchControlResponse'};

        public rechercherDemandeOutputDt(){}

        public rechercherDemandeOutputDt(DOM.XmlNode responseNode){
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
            Dom.XmlNode[] rechercherDemandeChildren = responseNode.getChildElements();
            gdfsuezBefCalypsoDemandeV4.rechercherDemandeOutputDt_listeDemande_element[] demandeList = new List<gdfsuezBefCalypsoDemandeV4.rechercherDemandeOutputDt_listeDemande_element>();
            if(rechercherDemandeChildren == null || rechercherDemandeChildren.size() == 0){
                this.listeDemande = null;
            } else{
                for(DOM.XmlNode childNode : rechercherDemandeChildren){
                    if(childNode.GetName() == 'listeDemande'){
                        gdfsuezBefCalypsoDemandeV4.rechercherDemandeOutputDt_listeDemande_element Obj = new gdfsuezBefCalypsoDemandeV4.rechercherDemandeOutputDt_listeDemande_element(childNode);
                        demandeList.Add(Obj);
                        nodesParsed.add(childNode);
                    }
                }
                this.listeDemande = demandeList;
            }
        }
	}
	public class rechercherDemandeOutputDt_listeDemande_element {
		// Restriction enumeration: 
		public String idDemande;
		public gdfsuezComBefChpPivotDemande.dateDt dateCreation;
		public gdfsuezComBefChpPivotDemande.listeValeursDt statutDemande;
		public gdfsuezComBefChpPivotDemande.listeValeursDt typeDemande;
		public gdfsuezComBefChpPivotDemande.listeValeursDt motifDemande;
		private transient String[] idDemande_type_info = new String[]{'idDemande',s_ns0,'string10','1','1','false'};
		private transient String[] dateCreation_type_info = new String[]{'dateCreation',s_ns0,'dateDt','0','1','false'};
		private transient String[] statutDemande_type_info = new String[]{'statutDemande',s_ns0,'listeValeursDt','0','1','false'};
		private transient String[] typeDemande_type_info = new String[]{'typeDemande',s_ns0,'listeValeursDt','0','1','false'};
		private transient String[] motifDemande_type_info = new String[]{'motifDemande',s_ns0,'listeValeursDt','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'idDemande','dateCreation','statutDemande','typeDemande','motifDemande'};

        public rechercherDemandeOutputDt_listeDemande_element(){

        }

        public rechercherDemandeOutputDt_listeDemande_element(DOM.XmlNode responseNode){
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
            DOM.XmlNode idDemandeNode = responseNode.getChildElement('idDemande', null);
            this.idDemande = (idDemandeNode == null) ? null : idDemandeNode.getText();
            nodesParsed.add(idDemandeNode);

            DOM.XmlNode dateCreationNode = responseNode.getChildElement('dateCreation', null);
            if(dateCreationNode == null){
                this.dateCreation = null;
            } else{
                gdfsuezComBefChpPivotDemande.dateDt dateCreationObj = new gdfsuezComBefChpPivotDemande.dateDt(dateCreationNode);
                nodesParsed.add(dateCreationNode);
                this.dateCreation = dateCreationObj;
            }
            
            DOM.XmlNode statutDemandeNode = responseNode.getChildElement('statutDemande', null);
            if(statutDemandeNode == null){
                this.statutDemande = null;
            } else{
                gdfsuezComBefChpPivotDemande.listeValeursDt statutDemandeObj = new gdfsuezComBefChpPivotDemande.listeValeursDt(statutDemandeNode);
                nodesParsed.add(statutDemandeNode);
                this.statutDemande = statutDemandeObj;
            }

            DOM.XmlNode typeDemandeNode = responseNode.getChildElement('typeDemande', null);
            if(typeDemandeNode == null){
                this.typeDemande = null;
            } else{
                gdfsuezComBefChpPivotDemande.listeValeursDt typeDemandeObj = new gdfsuezComBefChpPivotDemande.listeValeursDt(typeDemandeNode);
                nodesParsed.add(typeDemandeNode);
                this.typeDemande = typeDemandeObj;
            }

            DOM.XmlNode motifDemandeNode = responseNode.getChildElement('motifDemande', null);
            if(motifDemandeNode == null){
                this.motifDemande = null;
            } else{
                gdfsuezComBefChpPivotDemande.listeValeursDt motifDemandeObj = new gdfsuezComBefChpPivotDemande.listeValeursDt(motifDemandeNode);
                nodesParsed.add(motifDemandeNode);
                this.motifDemande = motifDemandeObj;
            }
            
        }
	}
	public class rechercherDemandeResponse_element {
		public gdfsuezBefCalypsoDemandeV4.rechercherDemandeOutputDt rechercherDemandeResponseOutput;
		public gdfsuezComBefChpPivotDemande.retourTraitementMessagesDt messageRetours;
		private transient String[] rechercherDemandeResponseOutput_type_info = new String[]{'rechercherDemandeResponseOutput',s_ns0,'rechercherDemandeOutputDt','0','1','false'};
		private transient String[] messageRetours_type_info = new String[]{'messageRetours',s_ns0,'retourTraitementMessagesDt','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'rechercherDemandeResponseOutput','messageRetours'};

        public rechercherDemandeResponse_element(){
        }

        public rechercherDemandeResponse_element(DOM.XmlNode responseNode){
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
            
            DOM.XmlNode rechercherDemandeResponseOutputNode = responseNode.getChildElement('rechercherDemandeResponseOutput', null);
            if(rechercherDemandeResponseOutputNode == null){
                this.rechercherDemandeResponseOutput = null;
            } else{
                gdfsuezBefCalypsoDemandeV4.rechercherDemandeOutputDt rechercherDemandeResponseOutputObj = new gdfsuezBefCalypsoDemandeV4.rechercherDemandeOutputDt(rechercherDemandeResponseOutputNode);
                nodesParsed.add(rechercherDemandeResponseOutputNode);
                this.rechercherDemandeResponseOutput = rechercherDemandeResponseOutputObj;
            }
            DOM.XmlNode messageRetoursNode = responseNode.getChildElement('messageRetours', null);
            if(messageRetoursNode == null){
                this.messageRetours = null;
            } else{
                gdfsuezComBefChpPivotDemande.retourTraitementMessagesDt messageRetoursObj = new gdfsuezComBefChpPivotDemande.retourTraitementMessagesDt(messageRetoursNode);
                nodesParsed.add(messageRetoursNode);
                this.messageRetours = messageRetoursObj;
            }
        }
	}
}