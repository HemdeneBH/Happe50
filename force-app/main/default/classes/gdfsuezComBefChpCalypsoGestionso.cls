//Generated by FuseIT WSDL2Apex (http://www.fuseit.com/Solutions/SFDC-Explorer/Help-WSDL-Parser.aspx)
//Methods Included: NotifierChangementEtatServiceGestion, DemanderSouscriptionService
// Primary Port Class Name: DemandeSouscriptionServicePort	
public class gdfsuezComBefChpCalypsoGestionso {
	private static final String s_ns0 = 'http://www.gdfsuez.com/bef/chp/calypso/GestionSouscriptionService/v1';
	public class demanderSouscriptionService_element {
		public gdfsuezComBefChpCalypsoGestionso.demanderSouscriptionServiceInputDt demanderSouscriptionServiceInput;
		public gdfsuezComBefChpPivot.contextDt context;
		private transient String[] demanderSouscriptionServiceInput_type_info = new String[]{'demanderSouscriptionServiceInput',s_ns0,'demanderSouscriptionServiceInputDt','1','1','false'};
		private transient String[] context_type_info = new String[]{'context',s_ns0,'contextDt','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'demanderSouscriptionServiceInput','context'};
		public demanderSouscriptionService_element(){
		}
		public demanderSouscriptionService_element(gdfsuezComBefChpCalypsoGestionso.demanderSouscriptionServiceInputDt demanderSouscriptionServiceInput,gdfsuezComBefChpPivot.contextDt context){
			this.demanderSouscriptionServiceInput = demanderSouscriptionServiceInput;
			this.context = context;
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			
			
			
			gdfsuezComBefChpCalypsoGestionso.demanderSouscriptionServiceInputDt demanderSouscriptionServiceInputObj = this.demanderSouscriptionServiceInput;
			Dom.XmlNode demanderSouscriptionServiceInputNode = outerNode.addChildElement('demanderSouscriptionServiceInput', null, null);
			if(demanderSouscriptionServiceInputObj != null){
				demanderSouscriptionServiceInputObj.populateXmlNode(demanderSouscriptionServiceInputNode);
			}
			
			gdfsuezComBefChpPivot.contextDt contextObj = this.context;
			Dom.XmlNode contextNode = outerNode.addChildElement('context', null, null);
			if(contextObj != null){
				contextObj.populateXmlNode(contextNode);
			}
		}
	
	
	
	}
	public class demanderSouscriptionServiceInputDt {
		public String idCompteClient;
		public String idPersonne;
		public String adresseEmailCorrespondance;
		public String idPropositionCommerciale;
		public gdfsuezComBefChpPivot.listeValeursDt enseigne;
		public gdfsuezComBefChpCalypsoGestionso.serviceDt[] service;
		private transient String[] idCompteClient_type_info = new String[]{'idCompteClient',s_ns0,'string','1','1','false'};
		private transient String[] idPersonne_type_info = new String[]{'idPersonne',s_ns0,'string','1','1','false'};
		private transient String[] adresseEmailCorrespondance_type_info = new String[]{'adresseEmailCorrespondance',s_ns0,'string','1','1','false'};
		private transient String[] idPropositionCommerciale_type_info = new String[]{'idPropositionCommerciale',s_ns0,'string','0','1','false'};
		private transient String[] enseigne_type_info = new String[]{'enseigne',s_ns0,'listeValeursDt','1','1','false'};
		private transient String[] service_type_info = new String[]{'service',s_ns0,'serviceDt','0','-1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'idCompteClient','idPersonne','adresseEmailCorrespondance','idPropositionCommerciale','enseigne','service'};
	
		public demanderSouscriptionServiceInputDt(){
		}
		public demanderSouscriptionServiceInputDt(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
			DOM.XmlNode idCompteClientNode = responseNode.getChildElement('idCompteClient', 'http://gdfsuez.com/bef/chp/calypso/GestionSouscriptionService/v1');
			this.idCompteClient = (idCompteClientNode == null) ? null : idCompteClientNode.getText();
			nodesParsed.add(idCompteClientNode);
			         
			DOM.XmlNode idPersonneNode = responseNode.getChildElement('idPersonne', 'http://gdfsuez.com/bef/chp/calypso/GestionSouscriptionService/v1');
			this.idPersonne = (idPersonneNode == null) ? null : idPersonneNode.getText();
			nodesParsed.add(idPersonneNode);

			DOM.XmlNode adresseEmailCorrespondanceNode = responseNode.getChildElement('adresseEmailCorrespondance', 'http://gdfsuez.com/bef/chp/calypso/GestionSouscriptionService/v1');
			this.adresseEmailCorrespondance = (adresseEmailCorrespondanceNode == null) ? null : adresseEmailCorrespondanceNode.getText();
			nodesParsed.add(adresseEmailCorrespondanceNode);


			DOM.XmlNode idPropositionCommercialeNode = responseNode.getChildElement('idPropositionCommerciale', 'http://gdfsuez.com/bef/chp/calypso/GestionSouscriptionService/v1');
			if(idPropositionCommercialeNode == null){
				this.idPropositionCommerciale = null;
			}
			else{
				this.idPropositionCommerciale = (idPropositionCommercialeNode == null) ? null : idPropositionCommercialeNode.getText();
				nodesParsed.add(idPropositionCommercialeNode);
			}
			
			         
			DOM.XmlNode enseigneNode = responseNode.getChildElement('enseigne', 'http://gdfsuez.com/bef/chp/calypso/GestionSouscriptionService/v1');
			if(enseigneNode == null){
				this.enseigne = null;
			} else{
				gdfsuezComBefChpPivot.listeValeursDt enseigneObj = new gdfsuezComBefChpPivot.listeValeursDt(enseigneNode);
				nodesParsed.add(enseigneNode);
				this.enseigne = enseigneObj;
			}


			Dom.XmlNode[] serviceChildren = responseNode.getChildElements();
			gdfsuezComBefChpCalypsoGestionso.serviceDt[] serviceList = new List<gdfsuezComBefChpCalypsoGestionso.serviceDt>();
			if(serviceChildren == null || serviceChildren.size() == 0){
				this.service = null;
			} else{
				for(DOM.XmlNode childNode : serviceChildren){
					if(childNode.GetName() == 'service'){
						gdfsuezComBefChpCalypsoGestionso.serviceDt Obj = new gdfsuezComBefChpCalypsoGestionso.serviceDt(childNode);
						serviceList.add(Obj);
						nodesParsed.add(childNode);
					}
				}
				this.service = serviceList;
			}
			
			
			
			      
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			Dom.XmlNode idCompteClientNode = outerNode.addChildElement('idCompteClient', null, null);
			if(this.idCompteClient != null){
				idCompteClientNode.addTextNode(String.valueOf(this.idCompteClient));
			}

			Dom.XmlNode idPersonneNode = outerNode.addChildElement('idPersonne', null, null);
			if(this.idPersonne != null){
				idPersonneNode.addTextNode(String.valueOf(this.idPersonne));
			}

			Dom.XmlNode adresseEmailCorrespondanceNode = outerNode.addChildElement('adresseEmailCorrespondance', null, null);
			if(this.adresseEmailCorrespondance != null){
				adresseEmailCorrespondanceNode.addTextNode(String.valueOf(this.adresseEmailCorrespondance));
			}

			Dom.XmlNode idPropositionCommercialeNode = outerNode.addChildElement('idPropositionCommerciale', null, null);
			if(this.idPropositionCommerciale != null){
				idPropositionCommercialeNode.addTextNode(String.valueOf(this.idPropositionCommerciale));
			}
			
			gdfsuezComBefChpPivot.listeValeursDt enseigneObj = this.enseigne;
			
			if(enseigneObj != null){
				Dom.XmlNode enseigneObjNode = outerNode.addChildElement('enseigne', null, null);
				enseigneObj.populateXmlNode(enseigneObjNode);
			}
			
			
			gdfsuezComBefChpCalypsoGestionso.serviceDt[] serviceObj = this.service;
			if(serviceObj != null){
				for(gdfsuezComBefChpCalypsoGestionso.serviceDt element: serviceObj){
					Dom.XmlNode serviceNode = outerNode.addChildElement('service', null, null);
					element.populateXmlNode(serviceNode);
				}
			}           
		}
	
	}
	public class demanderSouscriptionServiceResponse_element {
		public gdfsuezComBefChpPivot.messageRetoursDt messageRetours;
		private transient String[] messageRetours_type_info = new String[]{'messageRetours',s_ns0,'messageRetoursDt','1','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'messageRetours'};
	
	public demanderSouscriptionServiceResponse_element() {
	}

	public demanderSouscriptionServiceResponse_element(DOM.XmlNode responseNode){
        
		Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
		DOM.XmlNode messageRetoursNode = responseNode.getChildElement('messageRetours', null);
        System.debug('messageRetoursNode :' + messageRetoursNode);
			if(messageRetoursNode == null){
				this.messageRetours = null;
			} else{
                System.debug('non nul');
				gdfsuezComBefChpPivot.messageRetoursDt messageRetoursObj = new gdfsuezComBefChpPivot.messageRetoursDt(messageRetoursNode);
				nodesParsed.add(messageRetoursNode);
				this.messageRetours = messageRetoursObj;
			}
	}

	
	}
	
	//Unexpected WSDL node under definitions: {http://schemas.xmlsoap.org/wsdl/}documentation
//WSDL node {http://schemas.xmlsoap.org/wsdl/}types expected before other nodes
	public class DemandeSouscriptionServicePort {
		public String endpoint_x = 'http://localhost:8080/ws/GestionSouscriptionService_v1';
		public Map<String,String> inputHttpHeaders_x;
		public Map<String,String> outputHttpHeaders_x;
		public String clientCertName_x;
		public String clientCert_x;
		public String clientCertPasswd_x;
		public Integer timeout_x;
		private transient String[] ns_map_type_info = new String[]{'http://gdfsuez.com/bef/chp/pivot','gdfsuezComBefChpPivot','http://www.gdfsuez.com/bef/chp/calypso/GestionSouscriptionService/v1','gdfsuezComBefChpCalypsoGestionso'};
		public gdfsuezComBefChpPivot.messageRetoursDt DemanderSouscriptionService(gdfsuezComBefChpCalypsoGestionso.demanderSouscriptionServiceInputDt demanderSouscriptionServiceInput,gdfsuezComBefChpPivot.contextDt context) {
			gdfsuezComBefChpCalypsoGestionso.demanderSouscriptionService_element request_x = new gdfsuezComBefChpCalypsoGestionso.demanderSouscriptionService_element();
			gdfsuezComBefChpCalypsoGestionso.demanderSouscriptionServiceResponse_element response_x;
			request_x.demanderSouscriptionServiceInput = demanderSouscriptionServiceInput;
			request_x.context = context;
		    // A map of key-value pairs that represent the response that the external service sends after receiving the request. In each pair, the key is a response identifier. The value is the response object, which is an instance of a type that is created as part of the auto-generated stub class.
			Map<String, gdfsuezComBefChpCalypsoGestionso.demanderSouscriptionServiceResponse_element> response_map_x = new Map<String, gdfsuezComBefChpCalypsoGestionso.demanderSouscriptionServiceResponse_element>();
			response_map_x.put('response_x', response_x);
			WebServiceCallout.invoke(
				this, // stub - An instance of the Apex class that is auto-generated from a WSDL (the stub class).
				request_x, // request - The request to the external service. The request is an instance of a type that is created as part of the auto-generated stub class.
				response_map_x, // response
				new String[]{endpoint_x, //  the URL of the external web service
				'tns:GestionSouscriptionService', // The SOAP action.
				s_ns0, // The request namespace.
				'demanderSouscriptionService', // The request name.
				s_ns0, // The response namespace.
				'demanderSouscriptionServiceResponse', //  The response name.
				'gdfsuezComBefChpCalypsoGestionso.demanderSouscriptionServiceResponse_element'} // The response type.
			);
			response_x = response_map_x.get('response_x');
			return response_x.messageRetours;
		}

		private DOM.XmlNode populateDoc(DOM.Document doc){
			String env = 'http://schemas.xmlsoap.org/soap/envelope/';
			String xsi = 'http://www.w3.org/2001/XMLSchema-instance';
			String xsd = 'http://www.w3.org/2001/XMLSchema';
			String v1 = 'http://www.gdfsuez.com/bef/chp/calypso/GestionSouscriptionService/v1';
			
			DOM.XmlNode envelope = doc.createRootElement('Envelope', env, 'soapenv');
			envelope.setNamespace('v1', v1);
			DOM.XmlNode header = envelope.addChildElement('Header', env, 'soapenv');
			
				AddHeader(header);
			

			System.debug(doc.toXmlString());
			DOM.XmlNode body = envelope.addChildElement('Body', env, 'soapenv');
			return body;
		}

		private void AddHeader(DOM.XmlNode header){
			if(!Test.isRunningTest() && !HP_Constantes.IS_HAPPE_PROFILE){
				SM_Utils_TokenOctopus.addOcTokenToSOAPReq(header);
			}
		}

		public gdfsuezComBefChpCalypsoGestionso.demanderSouscriptionServiceResponse_element DemanderSouscriptionService_Http(gdfsuezComBefChpCalypsoGestionso.demanderSouscriptionServiceInputDt demanderSouscriptionServiceInput,gdfsuezComBefChpPivot.contextDt context) {
			DOM.Document doc = new DOM.Document();
			DOM.XmlNode body = populateDoc(doc);
			DOM.XmlNode methodNode = body.addChildElement('v1:demanderSouscriptionService', null, null);           
			gdfsuezComBefChpCalypsoGestionso.demanderSouscriptionService_element request_x = new gdfsuezComBefChpCalypsoGestionso.demanderSouscriptionService_element(demanderSouscriptionServiceInput,context);
			request_x.populateXmlNode(methodNode);
			
			HttpRequest req = new HttpRequest();
			system.debug('certif'+SM_OCTOPUS__c.getOrgDefaults().certName__c);
			if(!Test.isRunningTest()){
				req.setClientCertificateName(SM_OCTOPUS__c.getOrgDefaults().certName__c);
			}
			
			req.setTimeout(60000);
			 
			req.setEndpoint(endpoint_x);
			system.debug('endpoint :' + endpoint_x);
			req.setMethod('POST');
			req.setHeader('Content-Type', 'text/xml; charset=UTF-8');
			req.setHeader('SOAPAction', 'tns:GestionSouscriptionService');
			req.setBodyDocument(doc);
			String request = doc.toXmlString() ;
			system.debug('request => '+request);
			Http http = new Http();

			HTTPResponse res = http.send(req);
			String response = res.getBody() ;
			System.debug('Response =>'+response);

			Dom.Document responseDoc = res.getBodyDocument();
			Dom.XmlNode rootNode = responseDoc.getRootElement();
			Dom.XmlNode bodyNode = rootNode.getChildElement('Body','http://schemas.xmlsoap.org/soap/envelope/');
			Dom.XmlNode demanderSouscriptionServiceResponseNode = bodyNode.getChildElement('demanderSouscriptionServiceResponse', 'http://www.gdfsuez.com/bef/chp/calypso/GestionSouscriptionService/v1');
			System.debug('*** Node : ' + demanderSouscriptionServiceResponseNode);
			gdfsuezComBefChpCalypsoGestionso.demanderSouscriptionServiceResponse_element response_x = new gdfsuezComBefChpCalypsoGestionso.demanderSouscriptionServiceResponse_element(demanderSouscriptionServiceResponseNode);
			return response_x;
		}
		
	}
	
	
	
	public class serviceDt {
		public gdfsuezComBefChpPivot.listeValeursDt serviceGestion;
		public gdfsuezComBefChpPivot.listeValeursDt typeGestion;
		public gdfsuezComBefChpPivot.listeValeursDt statutService;
		private transient String[] serviceGestion_type_info = new String[]{'serviceGestion',s_ns0,'listeValeursDt','1','1','false'};
		private transient String[] typeGestion_type_info = new String[]{'typeGestion',s_ns0,'listeValeursDt','0','1','false'};
		private transient String[] statutService_type_info = new String[]{'statutService',s_ns0,'listeValeursDt','0','1','false'};
		private transient String[] apex_schema_type_info = new String[]{s_ns0,'true','false'};
		private transient String[] field_order_type_info = new String[]{'serviceGestion','typeGestion','statutService'};
	
		public serviceDt(){
		}
		public serviceDt(DOM.XmlNode responseNode){
			Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();

			DOM.XmlNode serviceGestionNode = responseNode.getChildElement('serviceGestion', 'http://gdfsuez.com/bef/chp/calypso/GestionSouscriptionService/v1');
			if(serviceGestionNode == null){
				this.serviceGestion = null;
			} else{
				gdfsuezComBefChpPivot.listeValeursDt serviceGestionObj = new gdfsuezComBefChpPivot.listeValeursDt(serviceGestionNode);
				nodesParsed.add(serviceGestionNode);
				this.serviceGestion = serviceGestionObj;
			}

			DOM.XmlNode typeGestionNode = responseNode.getChildElement('typeGestion', 'http://gdfsuez.com/bef/chp/calypso/GestionSouscriptionService/v1');
			if(typeGestionNode == null){
				this.typeGestion = null;
			} else{
				gdfsuezComBefChpPivot.listeValeursDt typeGestionObj = new gdfsuezComBefChpPivot.listeValeursDt(typeGestionNode);
				nodesParsed.add(typeGestionNode);
				this.typeGestion = typeGestionObj;
			}

			DOM.XmlNode statutServiceNode = responseNode.getChildElement('statutService', 'http://gdfsuez.com/bef/chp/calypso/GestionSouscriptionService/v1');
			if(statutServiceNode == null){
				this.statutService = null;
			} else{
				gdfsuezComBefChpPivot.listeValeursDt statutServiceObj = new gdfsuezComBefChpPivot.listeValeursDt(statutServiceNode);
				nodesParsed.add(statutServiceNode);
				this.statutService = statutServiceObj;
			}
			
		}
		public void populateXmlNode(Dom.XmlNode outerNode){
			gdfsuezComBefChpPivot.listeValeursDt serviceGestionObj = this.serviceGestion;
			
			if(serviceGestionObj != null){
				Dom.XmlNode serviceGestionObjNode = outerNode.addChildElement('serviceGestion', null, null);
				serviceGestionObj.populateXmlNode(serviceGestionObjNode);
			}
			
			gdfsuezComBefChpPivot.listeValeursDt typeGestionObj = this.typeGestion;
			
			if(typeGestionObj != null){
				Dom.XmlNode typeGestionObjNode = outerNode.addChildElement('typeGestion', null, null);
				typeGestionObj.populateXmlNode(typeGestionObjNode);
			}
			
			gdfsuezComBefChpPivot.listeValeursDt statutServiceObj = this.statutService;
			
			if(statutServiceObj != null){
				Dom.XmlNode statutServiceObjNode = outerNode.addChildElement('statutService', null, null);
				statutServiceObj.populateXmlNode(statutServiceObjNode);
			}  
		}
	
	
	}


		
}