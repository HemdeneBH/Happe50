//Generated by FuseIT WSDL2Apex (http://www.fuseit.com/Solutions/SFDC-Explorer/Help-WSDL-Parser.aspx)

@isTest(SeeAllData=true)
private class gdfsuezBefCalypsoPersonneV8WebSvcTest {
    /*@testSetup static void setup() {
    SM_AP08_TestLib.insertCS_SMOCTOPUS();
    }*/
    
    @isTest static void coverGeneratedCodeTypes() {
        Test.setMock(WebServiceMock.class, new gdfsuezBefCalypsoPersonneV8MockImpl());
        gdfsuezBefCalypsoPersonneV8 parentObject = new gdfsuezBefCalypsoPersonneV8();
        DOM.Document doc = new DOM.Document();
        DOM.XmlNode mockNode = doc.createRootElement('Envelope', 'http://schemas.xmlsoap.org/soap/envelope/', 'env');
        new gdfsuezBefCalypsoPersonneV8.adressePersonneDt(mockNode);                
        new gdfsuezBefCalypsoPersonneV8.creerPersonneInputDt(mockNode);             
        new gdfsuezBefCalypsoPersonneV8.creerPersonneOutputDt(mockNode);                
        new gdfsuezBefCalypsoPersonneV8.creerPersonneResponse_element(mockNode);                
        new gdfsuezBefCalypsoPersonneV8.lirePersonneInputDt(mockNode);              
        new gdfsuezBefCalypsoPersonneV8.lirePersonneOutputDt(mockNode);             
        new gdfsuezBefCalypsoPersonneV8.lirePersonneResponse_element(mockNode);             
        new gdfsuezBefCalypsoPersonneV8.majOptinInputDt(mockNode);              
        new gdfsuezBefCalypsoPersonneV8.majOptinResponse_element(mockNode);             
        new gdfsuezBefCalypsoPersonneV8.majPersonneInputDt(mockNode);               
        new gdfsuezBefCalypsoPersonneV8.majPersonneResponse_element(mockNode);              
        new gdfsuezBefCalypsoPersonneV8.rechercherPersonneInputDt(mockNode);                
        new gdfsuezBefCalypsoPersonneV8.rechercherPersonneOutputDt(mockNode);               
        new gdfsuezBefCalypsoPersonneV8.rechercherPersonneResponse_element(mockNode);               
        new gdfsuezComBefCalypsoPersonneV8.adresseDt(mockNode);             
        new gdfsuezComBefCalypsoPersonneV8.CompteClientAbstract(mockNode);              
        new gdfsuezComBefCalypsoPersonneV8.historiqueDt(mockNode);              
        new gdfsuezComBefCalypsoPersonneV8.historiqueDt_refPersonne_element(mockNode);              
        new gdfsuezComBefCalypsoPersonneV8.Personne(mockNode);              
        new gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_canalCommunication_contactabilite_element(mockNode);             
        new gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_canalCommunication_element(mockNode);                
        new gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_element(mockNode);               
        new gdfsuezComBefCalypsoPersonneV8.Personne_profilMarketing_element(mockNode);              
        new gdfsuezComBefCalypsoPersonneV8.PersonneAbstract(mockNode);              
        new gdfsuezComBefCalypsoPersonneV8.typologieMarcheDt(mockNode);             
        new gdfsuezComBefChpPivotV8.contextDt(mockNode);                
        new gdfsuezComBefChpPivotV8.contextDt_systemPath_element(mockNode);             
        new gdfsuezComBefChpPivotV8.contextDt_systemPath_system_element(mockNode);              
        new gdfsuezComBefChpPivotV8.horodatageDt(mockNode);             
        new gdfsuezComBefChpPivotV8.horodatageDt_valeur_element(mockNode);              
        new gdfsuezComBefChpPivotV8.horodatageSimpleDt(mockNode);               
        new gdfsuezComBefChpPivotV8.intervalleDt(mockNode);             
        new gdfsuezComBefChpPivotV8.intervalleDt_Dates_element(mockNode);               
        new gdfsuezComBefChpPivotV8.listeValeursDt(mockNode);               
        new gdfsuezComBefChpPivotV8.listeValeursParticulieresDt(mockNode);              
        new gdfsuezComBefChpPivotV8.messageRetoursDt(mockNode);             
        new gdfsuezComBefChpPivotV8.messageRetoursDt_messageRetour_element(mockNode);               
        new gdfsuezComBefChpPivotV8.paginationDt(mockNode);             
        new gdfsuezComBefChpPivotV8.refPersonneCreerDt(mockNode);               
        new gdfsuezComBefChpPivotV8.refPersonneLireDt(mockNode);                
        new gdfsuezComBefChpPivotV8.refPersonneMAJDt(mockNode);             
        new gdfsuezComBefChpPivotV8.retourTraitementMessageDt(mockNode);                
        new gdfsuezComBefChpPivotV8.retourTraitementMessagesDt(mockNode);               
        new gdfsuezComBefChpPivotV8.searchControlRequestDt(mockNode);               
        new gdfsuezComBefChpPivotV8.searchControlRequestHeaderDt(mockNode);             
        new gdfsuezComBefChpPivotV8.sortDt(mockNode);               
        new gdfsuezComBefChpPivotV8.sortDt_field_element(mockNode);             
        gdfsuezBefCalypsoPersonneV8.adressePersonneDt Obj1 = new gdfsuezBefCalypsoPersonneV8.adressePersonneDt();
        Obj1.populateXmlNode(mockNode);
        gdfsuezBefCalypsoPersonneV8.creerPersonne_element Obj2 = new gdfsuezBefCalypsoPersonneV8.creerPersonne_element();
        Obj2.populateXmlNode(mockNode);
        gdfsuezBefCalypsoPersonneV8.creerPersonneInputDt Obj3 = new gdfsuezBefCalypsoPersonneV8.creerPersonneInputDt();
        Obj3.populateXmlNode(mockNode);
        gdfsuezBefCalypsoPersonneV8.creerPersonneOutputDt Obj4 = new gdfsuezBefCalypsoPersonneV8.creerPersonneOutputDt();
        Obj4.populateXmlNode(mockNode);
        new gdfsuezBefCalypsoPersonneV8.creerPersonneResponse_element();
        gdfsuezBefCalypsoPersonneV8.lirePersonne_element Obj6 = new gdfsuezBefCalypsoPersonneV8.lirePersonne_element();
        Obj6.populateXmlNode(mockNode);
        gdfsuezBefCalypsoPersonneV8.lirePersonneInputDt Obj7 = new gdfsuezBefCalypsoPersonneV8.lirePersonneInputDt();
        Obj7.populateXmlNode(mockNode);
        gdfsuezBefCalypsoPersonneV8.lirePersonneOutputDt Obj8 = new gdfsuezBefCalypsoPersonneV8.lirePersonneOutputDt();
        Obj8.populateXmlNode(mockNode);
        new gdfsuezBefCalypsoPersonneV8.lirePersonneResponse_element();
        gdfsuezBefCalypsoPersonneV8.majOptin_element Obj10 = new gdfsuezBefCalypsoPersonneV8.majOptin_element();
        Obj10.populateXmlNode(mockNode);
        gdfsuezBefCalypsoPersonneV8.majOptinInputDt Obj11 = new gdfsuezBefCalypsoPersonneV8.majOptinInputDt();
        Obj11.populateXmlNode(mockNode);
        new gdfsuezBefCalypsoPersonneV8.majOptinResponse_element();
        gdfsuezBefCalypsoPersonneV8.majPersonne_element Obj13 = new gdfsuezBefCalypsoPersonneV8.majPersonne_element();
        Obj13.populateXmlNode(mockNode);
        gdfsuezBefCalypsoPersonneV8.majPersonneInputDt Obj14 = new gdfsuezBefCalypsoPersonneV8.majPersonneInputDt();
        Obj14.populateXmlNode(mockNode);
        new gdfsuezBefCalypsoPersonneV8.majPersonneResponse_element();
        gdfsuezBefCalypsoPersonneV8.rechercherPersonne_element Obj16 = new gdfsuezBefCalypsoPersonneV8.rechercherPersonne_element();
        Obj16.populateXmlNode(mockNode);
        gdfsuezBefCalypsoPersonneV8.rechercherPersonneInputDt Obj17 = new gdfsuezBefCalypsoPersonneV8.rechercherPersonneInputDt();
        Obj17.populateXmlNode(mockNode);
        gdfsuezBefCalypsoPersonneV8.rechercherPersonneOutputDt Obj18 = new gdfsuezBefCalypsoPersonneV8.rechercherPersonneOutputDt();
        Obj18.populateXmlNode(mockNode);
        new gdfsuezBefCalypsoPersonneV8.rechercherPersonneResponse_element();
        gdfsuezComBefCalypsoPersonneV8.adresseDt Obj20 = new gdfsuezComBefCalypsoPersonneV8.adresseDt();
        Obj20.populateXmlNode(mockNode);
        gdfsuezComBefCalypsoPersonneV8.ParseDateTime('2014-11-05T13:15:30Z');
        gdfsuezComBefCalypsoPersonneV8.CompteClientAbstract Obj21 = new gdfsuezComBefCalypsoPersonneV8.CompteClientAbstract();
        Obj21.populateXmlNode(mockNode);
        gdfsuezComBefCalypsoPersonneV8.historiqueDt Obj22 = new gdfsuezComBefCalypsoPersonneV8.historiqueDt();
        Obj22.populateXmlNode(mockNode);
        gdfsuezComBefCalypsoPersonneV8.historiqueDt_refPersonne_element Obj23 = new gdfsuezComBefCalypsoPersonneV8.historiqueDt_refPersonne_element();
        Obj23.populateXmlNode(mockNode);
        gdfsuezComBefCalypsoPersonneV8.Personne Obj24 = new gdfsuezComBefCalypsoPersonneV8.Personne();
        Obj24.populateXmlNode(mockNode);
        gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_canalCommunication_contactabilite_element Obj25 = new gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_canalCommunication_contactabilite_element();
        Obj25.populateXmlNode(mockNode);
        gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_canalCommunication_element Obj26 = new gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_canalCommunication_element();
        Obj26.populateXmlNode(mockNode);
        gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_element Obj27 = new gdfsuezComBefCalypsoPersonneV8.Personne_correspondance_element();
        Obj27.populateXmlNode(mockNode);
        gdfsuezComBefCalypsoPersonneV8.Personne_profilMarketing_element Obj28 = new gdfsuezComBefCalypsoPersonneV8.Personne_profilMarketing_element();
        Obj28.populateXmlNode(mockNode);
        gdfsuezComBefCalypsoPersonneV8.PersonneAbstract Obj29 = new gdfsuezComBefCalypsoPersonneV8.PersonneAbstract();
        Obj29.populateXmlNode(mockNode);
        gdfsuezComBefCalypsoPersonneV8.typologieMarcheDt Obj30 = new gdfsuezComBefCalypsoPersonneV8.typologieMarcheDt();
        Obj30.populateXmlNode(mockNode);
        gdfsuezComBefChpPivotV8.contextDt Obj31 = new gdfsuezComBefChpPivotV8.contextDt();
        Obj31.populateXmlNode(mockNode);
        gdfsuezComBefChpPivotV8.ParseDateTime('2014-11-05T13:15:30Z');
        gdfsuezComBefChpPivotV8.contextDt_systemPath_element Obj32 = new gdfsuezComBefChpPivotV8.contextDt_systemPath_element();
        Obj32.populateXmlNode(mockNode);
        gdfsuezComBefChpPivotV8.contextDt_systemPath_system_element Obj33 = new gdfsuezComBefChpPivotV8.contextDt_systemPath_system_element();
        Obj33.populateXmlNode(mockNode);
        gdfsuezComBefChpPivotV8.horodatageDt Obj34 = new gdfsuezComBefChpPivotV8.horodatageDt();
        Obj34.populateXmlNode(mockNode);
        gdfsuezComBefChpPivotV8.horodatageDt_valeur_element Obj35 = new gdfsuezComBefChpPivotV8.horodatageDt_valeur_element();
        Obj35.populateXmlNode(mockNode);
        gdfsuezComBefChpPivotV8.horodatageSimpleDt Obj36 = new gdfsuezComBefChpPivotV8.horodatageSimpleDt();
        Obj36.populateXmlNode(mockNode);
        gdfsuezComBefChpPivotV8.intervalleDt Obj37 = new gdfsuezComBefChpPivotV8.intervalleDt();
        Obj37.populateXmlNode(mockNode);
        gdfsuezComBefChpPivotV8.intervalleDt_Dates_element Obj38 = new gdfsuezComBefChpPivotV8.intervalleDt_Dates_element();
        Obj38.populateXmlNode(mockNode);
        gdfsuezComBefChpPivotV8.listeValeursDt Obj39 = new gdfsuezComBefChpPivotV8.listeValeursDt();
        Obj39.populateXmlNode(mockNode);
        gdfsuezComBefChpPivotV8.listeValeursParticulieresDt Obj40 = new gdfsuezComBefChpPivotV8.listeValeursParticulieresDt();
        Obj40.populateXmlNode(mockNode);
        gdfsuezComBefChpPivotV8.messageRetoursDt Obj41 = new gdfsuezComBefChpPivotV8.messageRetoursDt();
        Obj41.populateXmlNode(mockNode);
        gdfsuezComBefChpPivotV8.messageRetoursDt_messageRetour_element Obj42 = new gdfsuezComBefChpPivotV8.messageRetoursDt_messageRetour_element();
        Obj42.populateXmlNode(mockNode);
        gdfsuezComBefChpPivotV8.paginationDt Obj43 = new gdfsuezComBefChpPivotV8.paginationDt();
        Obj43.populateXmlNode(mockNode);
        gdfsuezComBefChpPivotV8.refPersonneCreerDt Obj44 = new gdfsuezComBefChpPivotV8.refPersonneCreerDt();
        Obj44.populateXmlNode(mockNode);
        gdfsuezComBefChpPivotV8.refPersonneLireDt Obj45 = new gdfsuezComBefChpPivotV8.refPersonneLireDt();
        Obj45.populateXmlNode(mockNode);
        gdfsuezComBefChpPivotV8.refPersonneMAJDt Obj46 = new gdfsuezComBefChpPivotV8.refPersonneMAJDt();
        Obj46.populateXmlNode(mockNode);
        gdfsuezComBefChpPivotV8.retourTraitementMessageDt Obj47 = new gdfsuezComBefChpPivotV8.retourTraitementMessageDt();
        Obj47.populateXmlNode(mockNode);
        gdfsuezComBefChpPivotV8.retourTraitementMessagesDt Obj48 = new gdfsuezComBefChpPivotV8.retourTraitementMessagesDt();
        Obj48.populateXmlNode(mockNode);
        gdfsuezComBefChpPivotV8.searchControlRequestDt Obj49 = new gdfsuezComBefChpPivotV8.searchControlRequestDt();
        Obj49.populateXmlNode(mockNode);
        gdfsuezComBefChpPivotV8.searchControlRequestHeaderDt Obj50 = new gdfsuezComBefChpPivotV8.searchControlRequestHeaderDt();
        Obj50.populateXmlNode(mockNode);
        gdfsuezComBefChpPivotV8.sortDt Obj51 = new gdfsuezComBefChpPivotV8.sortDt();
        Obj51.populateXmlNode(mockNode);
        gdfsuezComBefChpPivotV8.sortDt_field_element Obj52 = new gdfsuezComBefChpPivotV8.sortDt_field_element();
        Obj52.populateXmlNode(mockNode);
    }
    @isTest static void coverCodeForCreerPersonne(){
        Test.setMock(WebServiceMock.class, new gdfsuezBefCalypsoPersonneV8MockImpl());
        gdfsuezBefCalypsoPersonneV8.PersonnePort testObject = new gdfsuezBefCalypsoPersonneV8.PersonnePort();
        System.assertNotEquals(null, testObject.CreerPersonne(null, null));
    }
    @isTest static void coverCodeForLirePersonne(){
    //SM_AP08_TestLib.insertCS_SMOCTOPUS();
        Test.setMock(WebServiceMock.class, new gdfsuezBefCalypsoPersonneV8MockImpl());
        gdfsuezBefCalypsoPersonneV8.PersonnePort testObject = new gdfsuezBefCalypsoPersonneV8.PersonnePort();
        System.assertNotEquals(null, testObject.LirePersonne(null, null));
    }
    @isTest static void coverCodeForMajOptin(){
    //SM_AP08_TestLib.insertCS_SMOCTOPUS();
        Test.setMock(WebServiceMock.class, new gdfsuezBefCalypsoPersonneV8MockImpl());
        gdfsuezBefCalypsoPersonneV8.PersonnePort testObject = new gdfsuezBefCalypsoPersonneV8.PersonnePort();
        System.assertEquals(null, testObject.MajOptin(null, null));
    }
    @isTest static void coverCodeForMajPersonne(){
        Test.setMock(WebServiceMock.class, new gdfsuezBefCalypsoPersonneV8MockImpl());
        gdfsuezBefCalypsoPersonneV8.PersonnePort testObject = new gdfsuezBefCalypsoPersonneV8.PersonnePort();
        System.assertEquals(null, testObject.MajPersonne(null, null));
    }
    @isTest static void coverCodeForRechercherPersonne(){
        Test.setMock(WebServiceMock.class, new gdfsuezBefCalypsoPersonneV8MockImpl());
        gdfsuezBefCalypsoPersonneV8.PersonnePort testObject = new gdfsuezBefCalypsoPersonneV8.PersonnePort();
        System.assertNotEquals(null, testObject.RechercherPersonne(null, null));
    }
    @isTest static void coverCodeForCreerPersonne_Http(){
        Test.setMock(HttpCalloutMock.class, new gdfsuezBefCalypsoPersonneV8HttpMock());
        gdfsuezBefCalypsoPersonneV8.PersonnePort testObject = new gdfsuezBefCalypsoPersonneV8.PersonnePort();
        System.assertNotEquals(null, testObject.CreerPersonne_Http(null, null));        
    }
    @isTest static void coverCodeForLirePersonne_Http(){
        Test.setMock(HttpCalloutMock.class, new gdfsuezBefCalypsoPersonneV8HttpMock());
        gdfsuezBefCalypsoPersonneV8.PersonnePort testObject = new gdfsuezBefCalypsoPersonneV8.PersonnePort();
        System.assertNotEquals(null, testObject.LirePersonne_Http(null, null));     
    }
    @isTest static void coverCodeForMajOptin_Http(){
        Test.setMock(HttpCalloutMock.class, new gdfsuezBefCalypsoPersonneV8HttpMock());
        gdfsuezBefCalypsoPersonneV8.PersonnePort testObject = new gdfsuezBefCalypsoPersonneV8.PersonnePort();
        System.assertEquals(null, testObject.MajOptin_Http(null, null));        
    }
    @isTest static void coverCodeForRechercherPersonne_Http(){
        Test.setMock(HttpCalloutMock.class, new gdfsuezBefCalypsoPersonneV8HttpMock());
        gdfsuezBefCalypsoPersonneV8.PersonnePort testObject = new gdfsuezBefCalypsoPersonneV8.PersonnePort();
        //gdfsuezComBefChpPivotV8.retourTraitementMessagesDt majP= testObject.MajPersonne_Http(new gdfsuezBefCalypsoPersonneV8.majPersonneInputDt(),new gdfsuezComBefChpPivotV8.contextDt());
        System.assertNotEquals(null, testObject.RechercherPersonne_Http(null, null));       
    }
}